Script started on Sun 29 Sep 2024 09:53:02 AM EDT
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[?1034h[lklfta1@gsuad.gsu.edu@snowball lab5]$ ls[K[Kvi lab5_oar[K[K[Kpart1.c
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;41r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[41;1H"lab5_part1.c" 28L, 693C[>c[1;1H[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[32mint[m main(){
    [32mint[m seed;
    [32mint[m i; [34m// declares the loop vaiable outside the for loop so it works with C89[m[8;5H[38;5;130mwhile[m ([31m1[m){[9;9Hprintf([31m"Enter a seed value (or 0 to quit): "[m);[10;9Hscanf([31m"[m[35m%d[m[31m"[m, &seed);[12;9H[34m// check if user inserts 0 to quit[m[13;9H[38;5;130mif[m (seed == [31m0[m){[14;13Hprintf([31m"Exiting the program.[m[35m\n[m[31m"[m);[15;13H[38;5;130mbreak[m;[16;9H}[18;9Hsrand(seed); [34m// give the seed to the random number generator[20;9H// Generate and print 5 random numbers[m[21;9Hprintf([31m"Random numbers with seed [m[35m%d[m[31m:[m[35m\n[m[31m"[m, seed);[22;9H[38;5;130mfor[m (i = [31m0[m; i<[31m5[m; i++){[23;13Hprintf([31m"[m[35m%d\n[m[31m"[m, rand());[24;9H}[25;9Hprintf([31m"[m[35m\n[m[31m"[m);
    }
    [38;5;130mreturn[m [31m0[m;
}
[94m~                                                                                                                [30;1H~                                                                                                                [31;1H~                                                                                                                [32;1H~                                                                                                                [33;1H~                                                                                                                [34;1H~                                                                                                                [35;1H~                                                                                                                [36;1H~                                                                                                                [37;1H~                                                                                                                [38;1H~                                                                                                                [39;1H~                                                                                                                [40;1H~                                                                                                                [m[41;96H20,9[10CAll[20;9H[?12l[?25h[27m[m[H[2J[?25l[1;1H[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[32mint[m main(){
    [32mint[m seed;
    [32mint[m i; [34m// declares the loop vaiable outside the for loop so it works with C89[m[8;5H[38;5;130mwhile[m ([31m1[m){[9;9Hprintf([31m"Enter a seed value (or 0 to quit): "[m);[10;9Hscanf([31m"[m[35m%d[m[31m"[m, &seed);[12;9H[34m// check if user inserts 0 to quit[m[13;9H[38;5;130mif[m (seed == [31m0[m){[14;13Hprintf([31m"Exiting the program.[m[35m\n[m[31m"[m);[15;13H[38;5;130mbreak[m;[16;9H}[18;9Hsrand(seed); [34m// give the seed to the random number generator[20;9H// Generate and print 5 random numbers[m[21;9Hprintf([31m"Random numbers with seed [m[35m%d[m[31m:[m[35m\n[m[31m"[m, seed);[22;9H[38;5;130mfor[m (i = [31m0[m; i<[31m5[m; i++){[23;13Hprintf([31m"[m[35m%d\n[m[31m"[m, rand());[24;9H}[25;9Hprintf([31m"[m[35m\n[m[31m"[m);
    }
    [38;5;130mreturn[m [31m0[m;
}
[94m~                                                                                                                [30;1H~                                                                                                                [31;1H~                                                                                                                [32;1H~                                                                                                                [33;1H~                                                                                                                [34;1H~                                                                                                                [35;1H~                                                                                                                [36;1H~                                                                                                                [37;1H~                                                                                                                [38;1H~                                                                                                                [39;1H~                                                                                                                [40;1H~                                                                                                                [m[41;96H20,9[10CAll"lab5_part1.c" 28L, 693C[20;9H[?12l[?25h[?25l[41;1H[1m-- INSERT --[m[41;13H[K[41;96H20,9[10CAll[20;9H[?12l[?25h[?25l[41;96H19[19;9H[?12l[?25h[?25l[41;97H8[18;9H[?12l[?25h[?25l[41;97H7,1[17;1H[?12l[?25h[?25l[13;23H[106m{[16;9H}[m[41;97H6,9[16;9H[?12l[?25h[?25l[13;23H{[16;9H}[41;97H5[15;9H[?12l[?25h[?25l[41;97H4[14;9H[?12l[?25h[?25l[41;97H3[13;9H[?12l[?25h[?25l[41;97H2[12;9H[?12l[?25h[?25l[41;97H1,1[11;1H[?12l[?25h[?25l[41;97H0,9[10;9H[?12l[?25h[?25l[41;96H9,9 [9;9H[?12l[?25h[?25l[41;96H8[8;9H[?12l[?25h[?25l[41;96H7,1[7;1H[?12l[?25h[?25l[41;96H6,9[6;9H[?12l[?25h[?25l[41;96H5[5;9H[?12l[?25h[?25l[4;9H[106m()[m[41;96H4[4;9H[?12l[?25h[?25l()[41;96H3,1[3;1H[?12l[?25h[?25l[41;96H2,9[2;9H[?12l[?25h[?25l[41;96H1[1;9H[?12l[?25h[?25l[41;98H8[1;8H[?12l[?25h[?25l[41;98H7[1;7H[?12l[?25h[?25l[41;98H6[1;6H[?12l[?25h[?25l[41;98H5[1;5H[?12l[?25h[?25l[41;98H4[1;4H[?12l[?25h[?25l[41;98H3[1;3H[?12l[?25h[?25l[41;98H2[1;2H[?12l[?25h[?25l[41;98H1[1;1H[?12l[?25h[?25l[2;40r[2;1H[L[1;41r[1;1H[K[2;1H[35m#include [m[31m<stdio.h>[m[41;96H[K[41;96H2,1[11CAll[2;1H[?12l[?25h[?25l[3;40r[3;1H[L[1;41r[2;1H[K[3;1H[35m#include [m[31m<stdio.h>[m[41;96H[K[41;96H3,1[11CAll[3;1H[?12l[?25h[?25l[41;96H2[2;1H[?12l[?25h[?25l[41;96H1[1;1H[?12l[?25h[?25l/[41;98H2[1;2H[?12l[?25h[?25l[34m/*

#include <stdio.h>
#include <stdlib.h>

int main(){
    int seed;
    int i; 

    while (1){
        printf("Enter a seed value (or 0 to quit): ");
        scanf("%d", &seed);

        
        if (seed == 0){
            printf("Exiting the program.\n");
            break;
        }

        srand(seed); 
        
        
        printf("Random numbers with seed %d:\n", seed);
        for (i = 0; i<5; i++){
            printf("%d\n", rand());
        }
        printf("\n");
    }
    return 0;
}[m[41;98H3[1;3H[?12l[?25h[?25l[2;40r[2;1H[L[1;41r[2;1H[34m * [m[41;96H[K[41;96H2,4[11CAll[2;4H[?12l[?25h[?25l[34m/[m

[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[32mint[m main(){
    [32mint[m seed;
    [32mint[m i; 

    [38;5;130mwhile[m ([31m1[m){
        printf([31m"Enter a seed value (or 0 to quit): "[m);
        scanf([31m"[m[35m%d[m[31m"[m, &seed);

        
        [38;5;130mif[m (seed == [31m0[m){
            printf([31m"Exiting the program.[m[35m\n[m[31m"[m);
            [38;5;130mbreak[m;
        }

        srand(seed); 
        
        
        printf([31m"Random numbers with seed [m[35m%d[m[31m:[m[35m\n[m[31m"[m, seed);
        [38;5;130mfor[m (i = [31m0[m; i<[31m5[m; i++){
            printf([31m"[m[35m%d\n[m[31m"[m, rand());
        }
        printf([31m"[m[35m\n[m[31m"[m);
    }
    [38;5;130mreturn[m [31m0[m;
}[2;4H[?12l[?25h[?25l[41;96H1,3[1;3H[?12l[?25h[?25l[2;40r[2;1H[L[1;41r[2;1H[34m * [m[41;96H[K[41;96H2,4[11CAll[2;4H[?12l[?25h[?25l[2;3H[K[41;98H3[2;3H[?12l[?25h[?25l[2;2H[K[41;98H2[2;2H[?12l[?25h[?25l[3;40r[3;1H[L[1;41r[41;96H[K[41;96H3,1[11CAll[3;1H[?12l[?25h[?25l[41;96H2[2;1H[?12l[?25h[?25l[34mR [m[41;98H2[2;2H[?12l[?25h[?25l[34ma [m[41;98H3[2;3H[?12l[?25h[?25l[34m [m[2;3H[K[41;98H2[2;2H[?12l[?25h[?25l[34m [m[2;2H[K[41;98H1[2;1H[?12l[?25h[?25l[1C[34m [m[41;98H2[2;2H[?12l[?25h[?25l[1C[34m [m[41;98H3[2;3H[?12l[?25h[?25l[34mr [m[41;98H4[2;4H[?12l[?25h[?25l[34ma [m[41;98H5[2;5H[?12l[?25h[?25l[34mn [m[41;98H6[2;6H[?12l[?25h[?25l[34m [m[2;6H[K[41;98H5[2;5H[?12l[?25h[?25l[34m [m[2;5H[K[41;98H4[2;4H[?12l[?25h[?25l[34m [m[2;4H[K[41;98H3[2;3H[?12l[?25h[?25l[34mr [m[41;98H4[2;4H[?12l[?25h[?25l[34ma [m[41;98H5[2;5H[?12l[?25h[?25l[34mn [m[41;98H6[2;6H[?12l[?25h[?25l[34md [m[41;98H7[2;7H[?12l[?25h[?25l[34mo [m[41;98H8[2;8H[?12l[?25h[?25l[34mm [m[41;98H9[2;9H[?12l[?25h[?25l[1C[34m [m[41;98H10[2;10H[?12l[?25h[?25l[34mn [m[41;99H1[2;11H[?12l[?25h[?25l[34mu [m[41;99H2[2;12H[?12l[?25h[?25l[34mm [m[41;99H3[2;13H[?12l[?25h[?25l[34mb [m[41;99H4[2;14H[?12l[?25h[?25l[34me [m[41;99H5[2;15H[?12l[?25h[?25l[34mr [m[41;99H6[2;16H[?12l[?25h[?25l[1C[34m [m[41;99H7[2;17H[?12l[?25h[?25l[34mg [m[41;99H8[2;18H[?12l[?25h[?25l[34me [m[41;99H9[2;19H[?12l[?25h[?25l[34mn [m[41;98H20[2;20H[?12l[?25h[?25l[34me [m[41;99H1[2;21H[?12l[?25h[?25l[34mr [m[41;99H2[2;22H[?12l[?25h[?25l[34ma [m[41;99H3[2;23H[?12l[?25h[?25l[34mt [m[41;99H4[2;24H[?12l[?25h[?25l[34mo [m[41;99H5[2;25H[?12l[?25h[?25l[34mr [m[41;99H6[2;26H[?12l[?25h[?25l[3;40r[3;1H[L[1;41r[2;26H[K[3;1H[34m [m[41;96H[K[41;96H3,1[11CAll[3;1H[?12l[?25h[?25l[1C[34m [m[41;98H2[3;2H[?12l[?25h[?25l[1C[34m [m[41;98H3[3;3H[?12l[?25h[?25l[1C[34m [m[41;98H4[3;4H[?12l[?25h[?25l[34mL [m[41;98H5[3;5H[?12l[?25h[?25l[34m [m[3;5H[K[41;98H4[3;4H[?12l[?25h[?25l[3;4H[K[41;98H3[3;3H[?12l[?25h[?25l[34mL [m[41;98H4[3;4H[?12l[?25h[?25l[34mi [m[41;98H5[3;5H[?12l[?25h[?25l[34mn [m[41;98H6[3;6H[?12l[?25h[?25l[34mn [m[41;98H7[3;7H[?12l[?25h[?25l[1C[34m [m[41;98H8[3;8H[?12l[?25h[?25l[34mK [m[41;98H9[3;9H[?12l[?25h[?25l[34ml [m[41;98H10[3;10H[?12l[?25h[?25l[34mo [m[41;99H1[3;11H[?12l[?25h[?25l[34mf [m[41;99H2[3;12H[?12l[?25h[?25l[34mta [m[41;99H4[3;14H[?12l[?25h[?25l[1C[34m [m[41;99H5[3;15H[?12l[?25h[?25l[41;96H6,1 [6;1H[?12l[?25h[?25l[41;96H9[9;1H[?12l[?25h[?25l[14;14H[106m{[32;5H}[m[41;96H14,15[14;15H[?12l[?25h[?25l{[32;5H}[41;96H20[20;15H[?12l[?25h[?25l[41;97H9[29;15H[?12l[?25h[?25l[10;11H[106m{[34;1H}[m[41;96H34,2 [34;2H[?12l[?25h[41;1H[K[34;1H[?25l[41;96H34,1[10CAll[34;1H[?12l[?25h[?25l[41;96H[K[41;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"lab5_part1.c" 34L, 744C written
[?1l>[?12l[?25h[?1049l]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ cat lab5_part1.c
/*
  random number generator
  Linn Klofta  

 */

#include <stdio.h>
#include <stdlib.h>

int main(){
    int seed;
    int i; // declares the loop vaiable outside the for loop so it works with C89

    while (1){
        printf("Enter a seed value (or 0 to quit): ");
        scanf("%d", &seed);

        // check if user inserts 0 to quit
        if (seed == 0){
            printf("Exiting the program.\n");
            break;
        }

        srand(seed); // give the seed to the random number generator
        
        // Generate and print 5 random numbers
        printf("Random numbers with seed %d:\n", seed);
        for (i = 0; i<5; i++){
            printf("%d\n", rand());
        }
        printf("\n");
    }
    return 0;
}
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ gcc lab5_part1.c -o lab5_part1
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ ./g[Klab5_part1
Enter a seed value (or 0 to quit): 45
Random numbers with seed 45:
1307654290
146997515
1281142331
1896355195
16470015

Enter a seed value (or 0 to quit): 23
Random numbers with seed 23:
1562469902
1039845534
2025653534
739593874
994290584

Enter a seed value (or 0 to quit): 45
Random numbers with seed 45:
1307654290
146997515
1281142331
1896355195
16470015

Enter a seed value (or 0 to quit): 1
Random numbers with seed 1:
1804289383
846930886
1681692777
1714636915
1957747793

Enter a seed value (or 0 to quit): 0
Exiting the program.
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ cp lab5_part1.c[Kc lab5_part1[K2.c
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ ls
Lab5.log  [0m[38;5;34mlab5_part1[0m  lab5_part1.c  lab5_part2.c
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ vi lab5_part2.c
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;41r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[41;1H"lab5_part2.c" 34L, 744C[>c[1;1H[34m/*
  random number generator
  Linn Klofta  

 */[m

[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[32mint[m main(){
    [32mint[m seed;
    [32mint[m i; [34m// declares the loop vaiable outside the for loop so it works with C89[m[14;5H[38;5;130mwhile[m ([31m1[m){[15;9Hprintf([31m"Enter a seed value (or 0 to quit): "[m);[16;9Hscanf([31m"[m[35m%d[m[31m"[m, &seed);[18;9H[34m// check if user inserts 0 to quit[m[19;9H[38;5;130mif[m (seed == [31m0[m){[20;13Hprintf([31m"Exiting the program.[m[35m\n[m[31m"[m);[21;13H[38;5;130mbreak[m;[22;9H}[24;9Hsrand(seed); [34m// give the seed to the random number generator[26;9H// Generate and print 5 random numbers[m[27;9Hprintf([31m"Random numbers with seed [m[35m%d[m[31m:[m[35m\n[m[31m"[m, seed);[28;9H[38;5;130mfor[m (i = [31m0[m; i<[31m5[m; i++){[29;13Hprintf([31m"[m[35m%d\n[m[31m"[m, rand());[30;9H}[31;9Hprintf([31m"[m[35m\n[m[31m"[m);
    }
    [38;5;130mreturn[m [31m0[m;
}
[94m~                                                                                                                [36;1H~                                                                                                                [37;1H~                                                                                                                [38;1H~                                                                                                                [39;1H~                                                                                                                [40;1H~                                                                                                                [m[41;96H1,1[11CAll[1;1H[?12l[?25h[27m[m[H[2J[?25l[1;1H[34m/*
  random number generator
  Linn Klofta  

 */[m

[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[32mint[m main(){
    [32mint[m seed;
    [32mint[m i; [34m// declares the loop vaiable outside the for loop so it works with C89[m[14;5H[38;5;130mwhile[m ([31m1[m){[15;9Hprintf([31m"Enter a seed value (or 0 to quit): "[m);[16;9Hscanf([31m"[m[35m%d[m[31m"[m, &seed);[18;9H[34m// check if user inserts 0 to quit[m[19;9H[38;5;130mif[m (seed == [31m0[m){[20;13Hprintf([31m"Exiting the program.[m[35m\n[m[31m"[m);[21;13H[38;5;130mbreak[m;[22;9H}[24;9Hsrand(seed); [34m// give the seed to the random number generator[26;9H// Generate and print 5 random numbers[m[27;9Hprintf([31m"Random numbers with seed [m[35m%d[m[31m:[m[35m\n[m[31m"[m, seed);[28;9H[38;5;130mfor[m (i = [31m0[m; i<[31m5[m; i++){[29;13Hprintf([31m"[m[35m%d\n[m[31m"[m, rand());[30;9H}[31;9Hprintf([31m"[m[35m\n[m[31m"[m);
    }
    [38;5;130mreturn[m [31m0[m;
}
[94m~                                                                                                                [36;1H~                                                                                                                [37;1H~                                                                                                                [38;1H~                                                                                                                [39;1H~                                                                                                                [40;1H~                                                                                                                [m[41;96H1,1[11CAll"lab5_part2.c" 34L, 744C[1;1H[?12l[?25h[?25l[41;96H2[2;1H[?12l[?25h[?25l[41;96H3[3;1H[?12l[?25h[?25l[41;96H4,0-1[4;1H[?12l[?25h[?25l[41;96H5,1  [5;1H[?12l[?25h[?25l[41;96H6,0-1[6;1H[?12l[?25h[?25l[41;96H7,1  [7;1H[?12l[?25h[?25l[41;96H8[8;1H[?12l[?25h[?25l[41;96H9,0-1[9;1H[?12l[?25h[?25l[41;96H10,1 [10;1H[?12l[?25h[?25l[41;97H1[11;1H[?12l[?25h[?25l[41;97H0[10;1H[?12l[?25h[?25l[41;97H1[11;1H[?12l[?25h[?25l[41;97H2[12;1H[?12l[?25h[?25l[41;97H3,0-1[13;1H[?12l[?25h[?25l[41;97H4,1  [14;1H[?12l[?25h[?25l[41;97H5[15;1H[?12l[?25h[?25l[41;97H6[16;1H[?12l[?25h[?25l[41;97H7,0-1[17;1H[?12l[?25h[?25l[41;97H8,1  [18;1H[?12l[?25h[?25l[41;97H9[19;1H[?12l[?25h[?25l[41;96H20[20;1H[?12l[?25h[?25l[41;97H1[21;1H[?12l[?25h[?25l[41;97H2[22;1H[?12l[?25h[?25l[41;97H3,0-1[23;1H[?12l[?25h[?25l[41;97H4,1  [24;1H[?12l[?25h[?25l[41;97H5[25;1H[?12l[?25h[?25l[41;97H6[26;1H[?12l[?25h[?25l[41;97H7[27;1H[?12l[?25h[?25l[41;97H8[28;1H[?12l[?25h[?25l[41;97H9[29;1H[?12l[?25h[?25l[41;96H30[30;1H[?12l[?25h[?25l[41;97H1[31;1H[?12l[?25h[?25l[41;97H2[32;1H[?12l[?25h[?25l[41;97H3[33;1H[?12l[?25h[?25l[10;11H[106m{[34;1H}[m[41;97H4[34;1H[?12l[?25h[?25l[1C[47m [m[41;1H[1m-- VISUAL LINE --[m[41;18H[K[41;96H34,1[10CAll[34;1H[?12l[?25h[?25l[10;11H{[33;2H[47m   [m[38;5;130m[47mreturn[m[47m [m[31m[47m0[m[47m; 
}[m[41;97H3[33;1H[?12l[?25h[?25l[32;2H[47m   } 
 [m[41;97H2[32;1H[?12l[?25h[?25l[31;2H[47m       printf([m[31m[47m"[m[35m[47m\n[m[31m[47m"[m[47m); 
 [m[41;97H1[31;1H[?12l[?25h[?25l[30;2H[47m       } 
 [m[41;97H0[30;1H[?12l[?25h[?25l[29;2H[47m           printf([m[31m[47m"[m[35m[47m%d\n[m[31m[47m"[m[47m, rand()); 
 [m[41;96H29[29;1H[?12l[?25h[?25l[28;2H[47m       [m[38;5;130m[47mfor[m[47m (i = [m[31m[47m0[m[47m; i<[m[31m[47m5[m[47m; i++){ 
 [m[41;97H8[28;1H[?12l[?25h[?25l[27;2H[47m       printf([m[31m[47m"Random numbers with seed [m[35m[47m%d[m[31m[47m:[m[35m[47m\n[m[31m[47m"[m[47m, seed); 
 [m[41;97H7[27;1H[?12l[?25h[?25l[26;2H[47m       [m[34m[47m// Generate and print 5 random numbers[m[47m 
 [m[41;97H6[26;1H[?12l[?25h[?25l[25;2H[47m        
 [m[41;97H5[25;1H[?12l[?25h[?25l[24;2H[47m       srand(seed); [m[34m[47m// give the seed to the random number generator[m[47m 
 [m[41;97H4[24;1H[?12l[?25h[?25l[47m [m[41;97H3,0-1[23;1H[?12l[?25h[?25l[22;2H[47m       } 
 [m[41;97H2,1  [22;1H[?12l[?25h[?25l[21;2H[47m           [m[38;5;130m[47mbreak[m[47m; 
 [m[41;97H1[21;1H[?12l[?25h[?25l[20;2H[47m           printf([m[31m[47m"Exiting the program.[m[35m[47m\n[m[31m[47m"[m[47m); 
 [m[41;97H0[20;1H[?12l[?25h[?25l[19;2H[47m       [m[38;5;130m[47mif[m[47m (seed == [m[31m[47m0[m[47m){ 
 [m[41;96H19[19;1H[?12l[?25h[?25l[18;2H[47m       [m[34m[47m// check if user inserts 0 to quit[m[47m 
 [m[41;97H8[18;1H[?12l[?25h[?25l[47m [m[41;97H7,0-1[17;1H[?12l[?25h[?25l[16;2H[47m       scanf([m[31m[47m"[m[35m[47m%d[m[31m[47m"[m[47m, &seed); 
 [m[41;97H6,1  [16;1H[?12l[?25h[?25l[15;2H[47m       printf([m[31m[47m"Enter a seed value (or 0 to quit): "[m[47m); 
 [m[41;97H5[15;1H[?12l[?25h[?25l[14;2H[47m   [m[38;5;130m[47mwhile[m[47m ([m[31m[47m1[m[47m){ 
 [m[41;97H4[14;1H[?12l[?25h[?25l[47m [m[41;97H3,0-1[13;1H[?12l[?25h[?25l[12;2H[47m   [m[32m[47mint[m[47m i; [m[34m[47m// declares the loop vaiable outside the for loop so it works with C89[m[47m 
 [m[41;97H2,1  [12;1H[?12l[?25h[?25l[11;2H[47m   [m[32m[47mint[m[47m seed; 
 [m[41;97H1[11;1H[?12l[?25h[?25l[10;2H[32m[47mnt[m[47m main(){ 
 [m[41;97H0[10;1H[?12l[?25h[?25l[32m[47mi[m[41;96H9,0-1[9;1H[?12l[?25h[?25l[8;1H[35m[47m#include [m[31m[47m<stdlib.h>[m
[47m [m[41;96H8,20 [8;20H[?12l[?25h[?25l[35m#include [m[31m<stdlib.h>[m[9;1H[K[41;96H9,0-1[9;1H[?12l[?25h[?25l[8;1H[35m[47m#include [m[31m[47m<stdlib.h>[m
[47m [m[41;96H8,20 [8;20H[?12l[?25h[?25l[35m#include [m[31m<stdlib.h>[m[9;1H[K[41;96H9,0-1[9;1H[?12l[?25h[?25l[41;1H26 fewer lines[1m [m[41;15H[K[9;1H[94m~                                                                                                                [10;1H~                                                                                                                [11;1H~                                                                                                                [12;1H~                                                                                                                [13;1H~                                                                                                                [14;1H~                                                                                                                [15;1H~                                                                                                                [16;1H~                                                                                                                [17;1H~                                                                                                                [18;1H~                                                                                                                [19;1H~                                                                                                                [20;1H~                                                                                                                [21;1H~                                                                                                                [22;1H~                                                                                                                [23;1H~                                                                                                                [24;1H~                                                                                                                [25;1H~                                                                                                                [26;1H~                                                                                                                [27;1H~                                                                                                                [28;1H~                                                                                                                [29;1H~                                                                                                                [30;1H~                                                                                                                [31;1H~                                                                                                                [32;1H~                                                                                                                [33;1H~                                                                                                                [34;1H~                                                                                                                [m[41;96H8,1[11CAll[41;96H[K[41;96H8,1[11CAll[8;1H[?12l[?25h[?25l[41;1H[1m-- INSERT --[m[41;13H[K[41;96H8,1[11CAll[8;1H[?12l[?25h[?25l[41;96H7[7;1H[?12l[?25h[?25l[41;96H6[6;1H[?12l[?25h[?25l[41;96H5[5;1H[?12l[?25h[?25l[41;96H4[4;1H[?12l[?25h[?25l[41;96H3[3;1H[?12l[?25h[?25l[41;96H2[2;1H[?12l[?25h[?25l[41;96H1[1;1H[?12l[?25h[?25l[41;98H2[1;2H[?12l[?25h[?25l[41;98H3[1;3H[?12l[?25h[?25l[41;96H2[2;3H[?12l[?25h[?25l[41;98H4[2;4H[?12l[?25h[?25l[41;98H5[2;5H[?12l[?25h[?25l[41;98H6[2;6H[?12l[?25h[?25l[41;98H7[2;7H[?12l[?25h[?25l[41;98H8[2;8H[?12l[?25h[?25l[41;98H9[2;9H[?12l[?25h[?25l[41;98H10[2;10H[?12l[?25h[?25l[41;99H1[2;11H[?12l[?25h[?25l[41;99H2[2;12H[?12l[?25h[?25l[41;99H3[2;13H[?12l[?25h[?25l[41;99H4[2;14H[?12l[?25h[?25l[41;99H5[2;15H[?12l[?25h[?25l[41;99H6[2;16H[?12l[?25h[?25l[41;99H7[2;17H[?12l[?25h[?25l[41;99H8[2;18H[?12l[?25h[?25l[41;99H9[2;19H[?12l[?25h[?25l[41;98H20[2;20H[?12l[?25h[?25l[41;99H1[2;21H[?12l[?25h[?25l[41;99H2[2;22H[?12l[?25h[?25l[41;99H3[2;23H[?12l[?25h[?25l[41;99H4[2;24H[?12l[?25h[?25l[41;99H5[2;25H[?12l[?25h[?25l[41;99H6[2;26H[?12l[?25h[?25l[2;25H[K[41;99H5[2;25H[?12l[?25h[?25l[2;24H[K[41;99H4[2;24H[?12l[?25h[?25l[34m=[m[41;99H5[2;25H[?12l[?25h[?25l[2;24H[K[41;99H4[2;24H[?12l[?25h[?25l[2;23H[K[41;99H3[2;23H[?12l[?25h[?25l[2;22H[K[41;99H2[2;22H[?12l[?25h[?25l[2;21H[K[41;99H1[2;21H[?12l[?25h[?25l[2;20H[K[41;99H0[2;20H[?12l[?25h[?25l[2;19H[K[41;98H19[2;19H[?12l[?25h[?25l[2;18H[K[41;99H8[2;18H[?12l[?25h[?25l[2;17H[K[41;99H7[2;17H[?12l[?25h[?25l[2;16H[K[41;99H6[2;16H[?12l[?25h[?25l[2;15H[K[41;99H5[2;15H[?12l[?25h[?25l[2;14H[K[41;99H4[2;14H[?12l[?25h[?25l[2;13H[K[41;99H3[2;13H[?12l[?25h[?25l[2;12H[K[41;99H2[2;12H[?12l[?25h[?25l[2;11H[K[41;99H1[2;11H[?12l[?25h[?25l[2;10H[K[41;99H0[2;10H[?12l[?25h[?25l[34mn[m[41;99H1[2;11H[?12l[?25h[?25l[34mu[m[41;99H2[2;12H[?12l[?25h[?25l[34mm[m[41;99H3[2;13H[?12l[?25h[?25l[34mb[m[41;99H4[2;14H[?12l[?25h[?25l[34me[m[41;99H5[2;15H[?12l[?25h[?25l[34mr[m[41;99H6[2;16H[?12l[?25h[?25l[34ms[m[41;99H7[2;17H[?12l[?25h[?25l[34m [m[41;99H8[2;18H[?12l[?25h[?25l[34mb[m[41;99H9[2;19H[?12l[?25h[?25l[2;18H[K[41;99H8[2;18H[?12l[?25h[?25l[34mf[m[41;99H9[2;19H[?12l[?25h[?25l[34mr[m[41;98H20[2;20H[?12l[?25h[?25l[34mo[m[41;99H1[2;21H[?12l[?25h[?25l[34mm[m[41;99H2[2;22H[?12l[?25h[?25l[34m [m[41;99H3[2;23H[?12l[?25h[?25l[34m0[m[41;99H4[2;24H[?12l[?25h[?25l[34m [m[41;99H5[2;25H[?12l[?25h[?25l[34mt[m[41;99H6[2;26H[?12l[?25h[?25l[34mo[m[41;99H7[2;27H[?12l[?25h[?25l[2;26H[K[41;99H6[2;26H[?12l[?25h[?25l[34mo[m[41;99H7[2;27H[?12l[?25h[?25l[34m [m[41;99H8[2;28H[?12l[?25h[?25l[34m3[m[41;99H9[2;29H[?12l[?25h[?25l[34m [m[41;98H30[2;30H[?12l[?25h[?25l[2;29H[K[41;98H29[2;29H[?12l[?25h[?25l[34m [m[41;98H30[2;30H[?12l[?25h[?25l[34mc[m[41;99H1[2;31H[?12l[?25h[?25l[34mo[m[41;99H2[2;32H[?12l[?25h[?25l[34mu[m[41;99H3[2;33H[?12l[?25h[?25l[34mn[m[41;99H4[2;34H[?12l[?25h[?25l[34mt[m[41;99H5[2;35H[?12l[?25h[?25l[34me[m[41;99H6[2;36H[?12l[?25h[?25l[34mr[m[41;99H7[2;37H[?12l[?25h[?25l[41;96H3,16[3;16H[?12l[?25h[?25l[41;96H4,1 [4;1H[?12l[?25h[?25l[41;96H5,4[5;4H[?12l[?25h[?25l[41;96H6,1[6;1H[?12l[?25h[?25l[41;96H7,19[7;19H[?12l[?25h[?25l[41;96H8,20[8;20H[?12l[?25h[?25l[41;96H7,19[7;19H[?12l[?25h[?25l[41;96H6,1 [6;1H[?12l[?25h[?25l[41;96H7,19[7;19H[?12l[?25h[?25l[8;40r[8;1H[L[1;41r[41;96H[K[41;96H8,1[11CAll[8;1H[?12l[?25h[?25l[7;40r[40;1H
[1;41r[7;1H[35m#include [m[31m<stdio.h>[m[40;1H[94m~                                                                                                                [m[41;96H[K[41;96H7,19[10CAll[7;19H[?12l[?25h[?25l[41;96H8[8;19H[?12l[?25h[?25l[41;96H7[7;19H[?12l[?25h[?25l[41;96H8[8;19H[?12l[?25h[?25l[41;98H20[8;20H[?12l[?25h[?25l[9;1H[K[41;96H9,1 [9;1H[?12l[?25h[?25l[10;1H[K[41;96H10,1[10;1H[?12l[?25h[?25l[32mint[m generate_random_value() {
    [38;5;130mreturn[m rand() % [31m4[m; [34m// Generates a value from 0 to 3[m[11;56H[K[12;1H}[12;2H[K[10;29H[106m{

}[m[41;97H2,2[12;2H[?12l[?25h[?25l[10;29H{

}[41;97H1[11;2H[?12l[?25h[?25l[41;97H0[10;2H[?12l[?25h[?25l[41;97H1[11;2H[?12l[?25h[?25l[41;97H0[10;2H[?12l[?25h[?25l[41;99H1[10;1H[?12l[?25h[?25l[11;40r[11;1H[L[1;41r[10;1H[K[11;1H[32mint[m generate_random_value() {[41;96H[K[41;96H11,1[10CAll[11;1H[?12l[?25h[?25l[41;97H0[10;1H[?12l[?25h[?25l/[41;99H2[10;2H[?12l[?25h[?25l[34m//[m[41;99H3[10;3H[?12l[?25h[?25l[34m [m[41;99H4[10;4H[?12l[?25h[?25l[34mG[m[41;99H5[10;5H[?12l[?25h[?25l[34me[m[41;99H6[10;6H[?12l[?25h[?25l[34mn[m[41;99H7[10;7H[?12l[?25h[?25l[34me[m[41;99H8[10;8H[?12l[?25h[?25l[34mr[m[41;99H9[10;9H[?12l[?25h[?25l[34ma[m[41;99H10[10;10H[?12l[?25h[?25l[34mt[m[41;100H1[10;11H[?12l[?25h[?25l[34me[m[41;100H2[10;12H[?12l[?25h[?25l[34m [m[41;100H3[10;13H[?12l[?25h[?25l[34mr[m[41;100H4[10;14H[?12l[?25h[?25l[34ma[m[41;100H5[10;15H[?12l[?25h[?25l[34mn[m[41;100H6[10;16H[?12l[?25h[?25l[34md[m[41;100H7[10;17H[?12l[?25h[?25l[34mo[m[41;100H8[10;18H[?12l[?25h[?25l[34mm[m[41;100H9[10;19H[?12l[?25h[?25l[34m [m[41;99H20[10;20H[?12l[?25h[?25l[34mv[m[41;100H1[10;21H[?12l[?25h[?25l[34ml[m[41;100H2[10;22H[?12l[?25h[?25l[10;21H[K[41;100H1[10;21H[?12l[?25h[?25l[34ma[m[41;100H2[10;22H[?12l[?25h[?25l[34ml[m[41;100H3[10;23H[?12l[?25h[?25l[34mu[m[41;100H4[10;24H[?12l[?25h[?25l[34me[m[41;100H5[10;25H[?12l[?25h[?25l[34m [m[41;100H6[10;26H[?12l[?25h[?25l[34mb[m[41;100H7[10;27H[?12l[?25h[?25l[34me[m[41;100H8[10;28H[?12l[?25h[?25l[34mt[m[41;100H9[10;29H[?12l[?25h[?25l[34mw[m[41;99H30[10;30H[?12l[?25h[?25l[34me[m[41;100H1[10;31H[?12l[?25h[?25l[34me[m[41;100H2[10;32H[?12l[?25h[?25l[34mn[m[41;100H3[10;33H[?12l[?25h[?25l[34m [m[41;100H4[10;34H[?12l[?25h[?25l[34m0[m[41;100H5[10;35H[?12l[?25h[?25l[34m [m[41;100H6[10;36H[?12l[?25h[?25l[34ma[m[41;100H7[10;37H[?12l[?25h[?25l[34mn[m[41;100H8[10;38H[?12l[?25h[?25l[34md[m[41;100H9[10;39H[?12l[?25h[?25l[34m [m[41;99H40[10;40H[?12l[?25h[?25l[34m3[m[41;100H1[10;41H[?12l[?25h[?25l[11;29H[106m{

}[m[41;97H1,30[11;30H[?12l[?25h[?25l{

}[41;97H2[12;30H[?12l[?25h[?25l[11;29H[106m{

}[m[41;97H3,2 [13;2H[?12l[?25h[?25l[14;1H[K[11;29H{

}[41;97H4,1[14;1H[?12l[?25h[?25l[15;1H[K[41;97H5[15;1H[?12l[?25h[?25l[32mint[m main() {
    [32mint[m seed;[16;14H[K[17;1H    [32mint[m num_values;[17;20H[K[18;1H    [32mint[m counts[[31m4[m] = {[31m0[m}; [34m// Initialize array to hold counts for 0, 1, 2, and 3[m[18;79H[K[19;1H    [32mint[m i;               [34m// Declare loop variables at the beginning[m[19;68H[K[20;1H    [32mint[m value;           [34m// Declare the variable for generated values[m[20;70H[K[21;1H    [32mfloat[m percentage;[21;22H[K[41;96H21,22[21;22H[?12l[?25h[?25l[41;100H3[21;23H[?12l[?25h[?25l[41;100H4[21;24H[?12l[?25h[?25l[41;100H5[21;25H[?12l[?25h[?25l[41;100H6[21;26H[?12l[?25h[?25l/[41;100H7[21;27H[?12l[?25h[?25l[34m//[m[41;100H8[21;28H[?12l[?25h[?25l[34m [m[41;100H9[21;29H[?12l[?25h[?25l[34mV[m[41;99H30[21;30H[?12l[?25h[?25l[34ma[m[41;100H1[21;31H[?12l[?25h[?25l[34mr[m[41;100H2[21;32H[?12l[?25h[?25l[34mi[m[41;100H3[21;33H[?12l[?25h[?25l[34ma[m[41;100H4[21;34H[?12l[?25h[?25l[34mb[m[41;100H5[21;35H[?12l[?25h[?25l[34ml[m[41;100H6[21;36H[?12l[?25h[?25l[34me[m[41;100H7[21;37H[?12l[?25h[?25l[34m [m[41;100H8[21;38H[?12l[?25h[?25l[34mf[m[41;100H9[21;39H[?12l[?25h[?25l[34mo[m[41;99H40[21;40H[?12l[?25h[?25l[34mr[m[41;100H1[21;41H[?12l[?25h[?25l[34m [m[41;100H2[21;42H[?12l[?25h[?25l[34m%[m[41;100H3[21;43H[?12l[?25h[?25l[34m [m[41;100H4[21;44H[?12l[?25h[?25l[34mc[m[41;100H5[21;45H[?12l[?25h[?25l[34ma[m[41;100H6[21;46H[?12l[?25h[?25l[34ml[m[41;100H7[21;47H[?12l[?25h[?25l[34mc[m[41;100H8[21;48H[?12l[?25h[?25l[34mu[m[41;100H9[21;49H[?12l[?25h[?25l[34ml[m[41;99H50[21;50H[?12l[?25h[?25l[34ma[m[41;100H1[21;51H[?12l[?25h[?25l[34mt[m[41;100H2[21;52H[?12l[?25h[?25l[34mi[m[41;100H3[21;53H[?12l[?25h[?25l[34mo[m[41;100H4[21;54H[?12l[?25h[?25l[34mn[m[41;100H5[21;55H[?12l[?25h[?25l[41;97H0[20;55H[?12l[?25h[?25l[41;100H4[20;54H[?12l[?25h[?25l[41;100H3[20;53H[?12l[?25h[?25l[41;100H2[20;52H[?12l[?25h[?25l[41;100H1[20;51H[?12l[?25h[?25l[41;100H0[20;50H[?12l[?25h[?25l[41;99H49[20;49H[?12l[?25h[?25l[41;100H8[20;48H[?12l[?25h[?25l[41;100H7[20;47H[?12l[?25h[?25l[41;100H6[20;46H[?12l[?25h[?25l[41;100H5[20;45H[?12l[?25h[?25l[41;100H4[20;44H[?12l[?25h[?25l[41;100H3[20;43H[?12l[?25h[?25l[41;100H2[20;42H[?12l[?25h[?25l[41;100H1[20;41H[?12l[?25h[?25l[34mvariable for generated values[m[20;69H[K[41;100H0[20;40H[?12l[?25h[?25l[34mvariable for generated values[m[20;68H[K[41;99H39[20;39H[?12l[?25h[?25l[34mvariable for generated values[m[20;67H[K[41;100H8[20;38H[?12l[?25h[?25l[34mvariable for generated values[m[20;66H[K[41;100H7[20;37H[?12l[?25h[?25l[34mvariable for generated values[m[20;65H[K[41;100H6[20;36H[?12l[?25h[?25l[34mvariable for generated values[m[20;64H[K[41;100H5[20;35H[?12l[?25h[?25l[34mvariable for generated values[m[20;63H[K[41;100H4[20;34H[?12l[?25h[?25l[34mvariable for generated values[m[20;62H[K[41;100H3[20;33H[?12l[?25h[?25l[34mvariable for generated values[m[20;61H[K[41;100H2[20;32H[?12l[?25h[?25l[34mvariable for generated values[m[20;60H[K[41;100H1[20;31H[?12l[?25h[?25l[34mvariable for generated values[m[20;59H[K[41;100H0[20;30H[?12l[?25h[?25l[34mvariable for generated values[m[20;58H[K[41;99H29[20;29H[?12l[?25h[?25l[41;96H19[19;29H[?12l[?25h[?25l[41;99H30[19;30H[?12l[?25h[?25l[41;100H1[19;31H[?12l[?25h[?25l[41;100H2[19;32H[?12l[?25h[?25l[41;100H3[19;33H[?12l[?25h[?25l[41;100H4[19;34H[?12l[?25h[?25l[41;100H5[19;35H[?12l[?25h[?25l[41;100H6[19;36H[?12l[?25h[?25l[41;100H7[19;37H[?12l[?25h[?25l[41;100H8[19;38H[?12l[?25h[?25l[41;100H7[19;37H[?12l[?25h[?25l[34mloop variables at the beginning[m[19;67H[K[41;100H6[19;36H[?12l[?25h[?25l[34mloop variables at the beginning[m[19;66H[K[41;100H5[19;35H[?12l[?25h[?25l[34mloop variables at the beginning[m[19;65H[K[41;100H4[19;34H[?12l[?25h[?25l[34mloop variables at the beginning[m[19;64H[K[41;100H3[19;33H[?12l[?25h[?25l[34moop variables at the beginning[m[19;63H[K[41;100H2[19;32H[?12l[?25h[?25l[34mloop variables at the beginning[m[19;62H[K[41;100H1[19;31H[?12l[?25h[?25l[34mloop variables at the beginning[m[19;61H[K[41;100H0[19;30H[?12l[?25h[?25l[34mloop variables at the beginning[m[19;60H[K[41;99H29[19;29H[?12l[?25h[?25l[41;97H8[18;29H[?12l[?25h[?25l[41;99H30[18;30H[?12l[?25h[?25l[41;100H1[18;31H[?12l[?25h[?25l[41;100H2[18;32H[?12l[?25h[?25l[41;100H3[18;33H[?12l[?25h[?25l[41;100H4[18;34H[?12l[?25h[?25l[41;100H5[18;35H[?12l[?25h[?25l[41;100H6[18;36H[?12l[?25h[?25l[41;100H7[18;37H[?12l[?25h[?25l[41;100H8[18;38H[?12l[?25h[?25l[41;100H9[18;39H[?12l[?25h[?25l[41;99H40[18;40H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;78H[K[41;99H39[18;39H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;77H[K[41;100H8[18;38H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;76H[K[41;100H7[18;37H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;75H[K[41;100H6[18;36H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;74H[K[41;100H5[18;35H[?12l[?25h[?25l[34mrray to hold counts for 0, 1, 2, and 3[m[18;73H[K[41;100H4[18;34H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;72H[K[41;100H3[18;33H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;71H[K[41;100H2[18;32H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;70H[K[41;100H1[18;31H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;69H[K[41;100H0[18;30H[?12l[?25h[?25l[34marray to hold counts for 0, 1, 2, and 3[m[18;68H[K[41;99H29[18;29H[?12l[?25h[?25l[41;97H9[19;29H[?12l[?25h[?25l[41;99H30[19;30H[?12l[?25h[?25l[41;100H1[19;31H[?12l[?25h[?25l[41;100H2[19;32H[?12l[?25h[?25l[41;100H3[19;33H[?12l[?25h[?25l[41;100H4[19;34H[?12l[?25h[?25l[41;100H5[19;35H[?12l[?25h[?25l[41;100H6[19;36H[?12l[?25h[?25l[41;100H7[19;37H[?12l[?25h[?25l[41;100H8[19;38H[?12l[?25h[?25l[41;100H9[19;39H[?12l[?25h[?25l[41;99H40[19;40H[?12l[?25h[?25l[41;100H1[19;41H[?12l[?25h[?25l[41;100H2[19;42H[?12l[?25h[?25l[41;100H3[19;43H[?12l[?25h[?25l[41;100H4[19;44H[?12l[?25h[?25l[41;100H5[19;45H[?12l[?25h[?25l[41;100H6[19;46H[?12l[?25h[?25l[41;100H7[19;47H[?12l[?25h[?25l[41;100H8[19;48H[?12l[?25h[?25l[41;100H9[19;49H[?12l[?25h[?25l[41;99H50[19;50H[?12l[?25h[?25l[41;100H1[19;51H[?12l[?25h[?25l[41;100H2[19;52H[?12l[?25h[?25l[41;100H3[19;53H[?12l[?25h[?25l[41;100H4[19;54H[?12l[?25h[?25l[41;100H5[19;55H[?12l[?25h[?25l[41;100H6[19;56H[?12l[?25h[?25l[41;100H7[19;57H[?12l[?25h[?25l[41;100H8[19;58H[?12l[?25h[?25l[41;100H9[19;59H[?12l[?25h[?25l[41;99H60[19;60H[?12l[?25h[?25l[19;59H[K[41;99H59[19;59H[?12l[?25h[?25l[19;58H[K[41;100H8[19;58H[?12l[?25h[?25l[19;57H[K[41;100H7[19;57H[?12l[?25h[?25l[19;56H[K[41;100H6[19;56H[?12l[?25h[?25l[19;55H[K[41;100H5[19;55H[?12l[?25h[?25l[19;54H[K[41;100H4[19;54H[?12l[?25h[?25l[19;53H[K[41;100H3[19;53H[?12l[?25h[?25l[19;52H[K[41;100H2[19;52H[?12l[?25h[?25l[19;51H[K[41;100H1[19;51H[?12l[?25h[?25l[19;50H[K[41;100H0[19;50H[?12l[?25h[?25l[19;49H[K[41;99H49[19;49H[?12l[?25h[?25l[19;48H[K[41;100H8[19;48H[?12l[?25h[?25l[19;47H[K[41;100H7[19;47H[?12l[?25h[?25l[19;46H[K[41;100H6[19;46H[?12l[?25h[?25l[19;45H[K[41;100H5[19;45H[?12l[?25h[?25l[19;44H[K[41;100H4[19;44H[?12l[?25h[?25l[19;43H[K[41;100H3[19;43H[?12l[?25h[?25l[41;96H20[20;43H[?12l[?25h[?25l[41;97H1[21;43H[?12l[?25h[?25l[41;100H4[21;44H[?12l[?25h[?25l[41;100H5[21;45H[?12l[?25h[?25l[41;100H6[21;46H[?12l[?25h[?25l[41;100H7[21;47H[?12l[?25h[?25l[41;100H8[21;48H[?12l[?25h[?25l[41;100H9[21;49H[?12l[?25h[?25l[41;99H50[21;50H[?12l[?25h[?25l[41;100H1[21;51H[?12l[?25h[?25l[41;100H2[21;52H[?12l[?25h[?25l[41;100H3[21;53H[?12l[?25h[?25l[41;100H4[21;54H[?12l[?25h[?25l[41;100H5[21;55H[?12l[?25h[?25l[22;1H[K[41;97H2,1 [22;1H[?12l[?25h[?25l[23;1H[K[41;97H3[23;1H[?12l[?25h[?25l[34m// Prompt for a seed value
//     printf("Enter a seed value: ");[m[24;39H[K[25;1H[34m//         scanf("%d", &seed);[m[25;31H[K[26;1H[34m//             srand(seed);[m[26;28H[K[41;97H6,28[26;28H[?12l[?25h[?25l[26;21H[34m[106m([4C)[m[41;100H7[26;27H[?12l[?25h[?25l[41;100H6[26;26H[?12l[?25h[?25l[34m(seed)[m[41;100H5[26;25H[?12l[?25h[?25l[41;100H4[26;24H[?12l[?25h[?25l[41;100H3[26;23H[?12l[?25h[?25l[34m[106m([4C)[m[41;100H2[26;22H[?12l[?25h[?25l[41;100H1[26;21H[?12l[?25h[?25l[34m(seed)[m[41;100H0[26;20H[?12l[?25h[?25l[41;99H19[26;19H[?12l[?25h[?25l[41;100H8[26;18H[?12l[?25h[?25l[41;100H7[26;17H[?12l[?25h[?25l[41;100H6[26;16H[?12l[?25h[?25l[41;100H5[26;15H[?12l[?25h[?25l[41;100H4[26;14H[?12l[?25h[?25l[41;100H3[26;13H[?12l[?25h[?25l[41;100H2[26;12H[?12l[?25h[?25l[41;100H1[26;11H[?12l[?25h[?25l[41;100H0[26;10H[?12l[?25h[?25l[41;99H9 [26;9H[?12l[?25h[?25l[41;99H8[26;8H[?12l[?25h[?25l[41;99H7[26;7H[?12l[?25h[?25l[41;99H6[26;6H[?12l[?25h[?25l[41;99H5[26;5H[?12l[?25h[?25l[41;99H4[26;4H[?12l[?25h[?25l[41;99H3[26;3H[?12l[?25h[?25l/             srand(seed);[26;27H[K[41;99H2[26;2H[?12l[?25h[?25l [12Csrand(seed);[26;26H[K[41;99H1[26;1H[?12l[?25h[?25l[41;97H5[25;1H[?12l[?25h[?25l[41;99H2[25;2H[?12l[?25h[?25l[41;99H3[25;3H[?12l[?25h[?25l/         scanf([31m"[m[35m%d[m[31m"[m, &seed);[25;30H[K[41;99H2[25;2H[?12l[?25h[?25l [8Cscanf([31m"[m[35m%d[m[31m"[m, &seed);[25;29H[K[41;99H1[25;1H[?12l[?25h[?25l[41;97H4[24;1H[?12l[?25h[?25l[41;99H2[24;2H[?12l[?25h[?25l[41;99H3[24;3H[?12l[?25h[?25l/     printf([31m"Enter a seed value: "[m);[24;38H[K[41;99H2[24;2H[?12l[?25h[?25l     printf([31m"Enter a seed value: "[m);[24;37H[K[41;99H1[24;1H[?12l[?25h[?25l[41;97H3[23;1H[?12l[?25h[?25l[41;97H4[24;1H[?12l[?25h[?25l[41;99H2[24;2H[?12l[?25h[?25l[41;99H1[24;1H[?12l[?25h[?25l[41;99H2[24;2H[?12l[?25h[?25l[41;99H3[24;3H[?12l[?25h[?25l[41;99H4[24;4H[?12l[?25h[?25l[41;99H5[24;5H[?12l[?25h[?25l[41;99H6[24;6H[?12l[?25h[?25lprintf([31m"Enter a seed value: "[m);[24;36H[K[41;99H5[24;5H[?12l[?25h[?25l[41;97H5[25;5H[?12l[?25h[?25l    scanf([31m"[m[35m%d[m[31m"[m, &seed);[25;28H[K[41;99H4[25;4H[?12l[?25h[?25l[41;97H6[26;4H[?12l[?25h[?25l[9Csrand(seed);[26;25H[K[41;99H3[26;3H[?12l[?25h[?25l[9Csrand(seed);[26;24H[K[41;99H2[26;2H[?12l[?25h[?25l[9Csrand(seed);[26;23H[K[41;99H1[26;1H[?12l[?25h[?25l[25;38Hsrand(seed);
[94m~                                                                                                                [m[41;97H5,28[25;28H[?12l[?25h[?25l [9Csrand(seed);[25;49H[K[25;14H[106m([11C)[m[41;100H7[25;27H[?12l[?25h[?25l;[9C srand(seed);[25;14H([11C)[41;100H8[25;28H[?12l[?25h[?25l[25;38H[K[26;1H          srand(seed);[26;23H[K[41;97H6,1 [26;1H[?12l[?25h[?25l[41;99H2[26;2H[?12l[?25h[?25l[41;99H3[26;3H[?12l[?25h[?25l[41;99H4[26;4H[?12l[?25h[?25l[41;99H5[26;5H[?12l[?25h[?25l[41;99H6[26;6H[?12l[?25h[?25l[41;99H7[26;7H[?12l[?25h[?25l[41;99H8[26;8H[?12l[?25h[?25l[41;99H9[26;9H[?12l[?25h[?25l[41;99H10[26;10H[?12l[?25h[?25l[41;100H1[26;11H[?12l[?25h[?25lsrand(seed);[26;22H[K[41;100H0[26;10H[?12l[?25h[?25lsrand(seed);[26;21H[K[41;99H9 [26;9H[?12l[?25h[?25lsrand(seed);[26;20H[K[41;99H8[26;8H[?12l[?25h[?25lsrand(seed);[26;19H[K[41;99H7[26;7H[?12l[?25h[?25lsrand(seed);[26;18H[K[41;99H6[26;6H[?12l[?25h[?25lsrand(seed);[26;17H[K[41;99H5[26;5H[?12l[?25h[?25l[41;97H5[25;5H[?12l[?25h[?25l[41;99H6[25;6H[?12l[?25h[?25l[41;99H7[25;7H[?12l[?25h[?25l[41;99H8[25;8H[?12l[?25h[?25l[41;99H9[25;9H[?12l[?25h[?25lscanf([31m"[m[35m%d[m[31m"[m, &seed);[25;27H[K[41;99H8[25;8H[?12l[?25h[?25lscanf([31m"[m[35m%d[m[31m"[m, &seed);[25;26H[K[41;99H7[25;7H[?12l[?25h[?25lscanf([31m"[m[35m%d[m[31m"[m, &seed);[25;25H[K[41;99H6[25;6H[?12l[?25h[?25lscanf([31m"[m[35m%d[m[31m"[m, &seed);[25;24H[K[41;99H5[25;5H[?12l[?25h[?25l[41;97H6[26;5H[?12l[?25h[?25l[41;99H6[26;6H[?12l[?25h[?25l[41;99H7[26;7H[?12l[?25h[?25l[41;99H8[26;8H[?12l[?25h[?25l[41;99H9[26;9H[?12l[?25h[?25ld[106m([mseed[106m)[m[41;99H10[26;10H[?12l[?25h[?25l[41;100H1[26;11H[?12l[?25h[?25l(seed)[41;100H2[26;12H[?12l[?25h[?25l[41;100H3[26;13H[?12l[?25h[?25l[41;100H4[26;14H[?12l[?25h[?25l[106m([mseed[106m)[m[41;100H5[26;15H[?12l[?25h[?25l[41;100H6[26;16H[?12l[?25h[?25l(seed)[41;100H7[26;17H[?12l[?25h[?25l[41;100H8[26;18H[?12l[?25h[?25l/[41;100H9[26;19H[?12l[?25h[?25l[34m//[m[41;99H20[26;20H[?12l[?25h[?25l[34m [m[41;100H1[26;21H[?12l[?25h[?25l[34ms[m[41;100H2[26;22H[?12l[?25h[?25l[34me[m[41;100H3[26;23H[?12l[?25h[?25l[34mt[m[41;100H4[26;24H[?12l[?25h[?25l[34m [m[41;100H5[26;25H[?12l[?25h[?25l[34ms[m[41;100H6[26;26H[?12l[?25h[?25l[34me[m[41;100H7[26;27H[?12l[?25h[?25l[34me[m[41;100H8[26;28H[?12l[?25h[?25l[34md[m[41;100H9[26;29H[?12l[?25h[?25l[34m [m[41;99H30[26;30H[?12l[?25h[?25l[34mv[m[41;100H1[26;31H[?12l[?25h[?25l[34ma[m[41;100H2[26;32H[?12l[?25h[?25l[34ml[m[41;100H3[26;33H[?12l[?25h[?25l[34mu[m[41;100H4[26;34H[?12l[?25h[?25l[34me[m[41;100H5[26;35H[?12l[?25h[?25l[34m [m[41;100H6[26;36H[?12l[?25h[?25l[34mf[m[41;100H7[26;37H[?12l[?25h[?25l[34mo[m[41;100H8[26;38H[?12l[?25h[?25l[34mr[m[41;100H9[26;39H[?12l[?25h[?25l[34m [m[41;99H40[26;40H[?12l[?25h[?25l[34mr[m[41;100H1[26;41H[?12l[?25h[?25l[34ma[m[41;100H2[26;42H[?12l[?25h[?25l[34mn[m[41;100H3[26;43H[?12l[?25h[?25l[34md[m[41;100H4[26;44H[?12l[?25h[?25l[34mo[m[41;100H5[26;45H[?12l[?25h[?25l[34mm[m[41;100H6[26;46H[?12l[?25h[?25l[34m [m[41;100H7[26;47H[?12l[?25h[?25l[34mn[m[41;100H8[26;48H[?12l[?25h[?25l[34mu[m[41;100H9[26;49H[?12l[?25h[?25l[34mm[m[41;99H50[26;50H[?12l[?25h[?25l[34mb[m[41;100H1[26;51H[?12l[?25h[?25l[34me[m[41;100H2[26;52H[?12l[?25h[?25l[34mr[m[41;100H3[26;53H[?12l[?25h[?25l[34m [m[41;100H4[26;54H[?12l[?25h[?25l[34mg[m[41;100H5[26;55H[?12l[?25h[?25l[34me[m[41;100H6[26;56H[?12l[?25h[?25l[34mn[m[41;100H7[26;57H[?12l[?25h[?25l[34me[m[41;100H8[26;58H[?12l[?25h[?25l[34mr[m[41;100H9[26;59H[?12l[?25h[?25l[34ma[m[41;99H60[26;60H[?12l[?25h[?25l[34mt[m[41;100H1[26;61H[?12l[?25h[?25l[34mi[m[41;100H2[26;62H[?12l[?25h[?25l[34mo[m[41;100H3[26;63H[?12l[?25h[?25l[34mn[m[41;100H4[26;64H[?12l[?25h[?25l[27;1H[K[41;97H7,1 [27;1H[?12l[?25h[?25l[28;1H[K[41;97H8[28;1H[?12l[?25h[?25l[41;97H7[27;1H[?12l[?25h[?25l[41;97H6[26;1H[?12l[?25h[?25l[41;97H5[25;1H[?12l[?25h[?25l[41;97H4[24;1H[?12l[?25h[?25l[41;97H3[23;1H[?12l[?25h[?25l [1C[34m/ Prompt for a seed value[m[41;99H2[23;2H[?12l[?25h[?25l [1C[34m/ Prompt for a seed value[m[41;99H3[23;3H[?12l[?25h[?25l [1C[34m/ Prompt for a seed value[m[41;99H4[23;4H[?12l[?25h[?25l [1C[34m/ Prompt for a seed value[m[41;99H5[23;5H[?12l[?25h[?25l[41;97H4[24;5H[?12l[?25h[?25l[41;97H5[25;5H[?12l[?25h[?25l[41;97H6[26;5H[?12l[?25h[?25l[41;97H7,1[27;1H[?12l[?25h[?25l[41;97H8[28;1H[?12l[?25h[?25lprintf([31m"Enter the number of random values to generate: "[m);
    scanf([31m"[m[35m%d[m[31m"[m, &num_values);[29;30H[K[41;97H9,30[29;30H[?12l[?25h[?25l[41;97H8[28;30H[?12l[?25h[?25l[41;99H29[28;29H[?12l[?25h[?25l[41;100H8[28;28H[?12l[?25h[?25l[41;100H7[28;27H[?12l[?25h[?25l[41;100H6[28;26H[?12l[?25h[?25l[41;100H5[28;25H[?12l[?25h[?25l[41;100H4[28;24H[?12l[?25h[?25l[41;100H3[28;23H[?12l[?25h[?25l[41;100H2[28;22H[?12l[?25h[?25l[41;100H1[28;21H[?12l[?25h[?25l[41;100H0[28;20H[?12l[?25h[?25l[41;99H19[28;19H[?12l[?25h[?25l[41;100H8[28;18H[?12l[?25h[?25l[41;100H7[28;17H[?12l[?25h[?25l[41;100H6[28;16H[?12l[?25h[?25l[41;100H5[28;15H[?12l[?25h[?25l[41;100H4[28;14H[?12l[?25h[?25l[41;100H3[28;13H[?12l[?25h[?25l[41;100H2[28;12H[?12l[?25h[?25l[41;100H1[28;11H[?12l[?25h[?25l[41;100H0[28;10H[?12l[?25h[?25l[41;99H9 [28;9H[?12l[?25h[?25l[106m([49C)[m[41;99H8[28;8H[?12l[?25h[?25l[41;99H7[28;7H[?12l[?25h[?25l([49C)[41;99H6[28;6H[?12l[?25h[?25l[41;99H5[28;5H[?12l[?25h[?25l[41;99H4[28;4H[?12l[?25h[?25l[41;99H3[28;3H[?12l[?25h[?25l[41;99H2[28;2H[?12l[?25h[?25l[41;99H1[28;1H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H2[28;2H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H3[28;3H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H4[28;4H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H5[28;5H[?12l[?25h[?25l[29;40r[29;1H[L[1;41r[28;5H[K[29;1Hprintf([31m"Enter the number of random values to generate: "[m);[41;96H[K[41;96H29,1[10CAll[29;1H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H2[29;2H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H3[29;3H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H4[29;4H[?12l[?25h[?25l printf([31m"Enter the number of random values to generate: "[m);[41;99H5[29;5H[?12l[?25h[?25l[41;97H8[28;5H[?12l[?25h[?25l/[41;99H6[28;6H[?12l[?25h[?25l[34m//[m[41;99H7[28;7H[?12l[?25h[?25l[34m [m[41;99H8[28;8H[?12l[?25h[?25l[34mp[m[41;99H9[28;9H[?12l[?25h[?25l[34mr[m[41;99H10[28;10H[?12l[?25h[?25l[34mo[m[41;100H1[28;11H[?12l[?25h[?25l[34mm[m[41;100H2[28;12H[?12l[?25h[?25l[34mp[m[41;100H3[28;13H[?12l[?25h[?25l[34mt[m[41;100H4[28;14H[?12l[?25h[?25l[34m [m[41;100H5[28;15H[?12l[?25h[?25l[34mf[m[41;100H6[28;16H[?12l[?25h[?25l[34mo[m[41;100H7[28;17H[?12l[?25h[?25l[34mr[m[41;100H8[28;18H[?12l[?25h[?25l[34m [m[41;100H9[28;19H[?12l[?25h[?25l[34mn[m[41;99H20[28;20H[?12l[?25h[?25l[34mu[m[41;100H1[28;21H[?12l[?25h[?25l[34mm[m[41;100H2[28;22H[?12l[?25h[?25l[34mb[m[41;100H3[28;23H[?12l[?25h[?25l[34me[m[41;100H4[28;24H[?12l[?25h[?25l[34mr[m[41;100H5[28;25H[?12l[?25h[?25l[34m [m[41;100H6[28;26H[?12l[?25h[?25l[34mo[m[41;100H7[28;27H[?12l[?25h[?25l[34mf[m[41;100H8[28;28H[?12l[?25h[?25l[34m [m[41;100H9[28;29H[?12l[?25h[?25l[34mr[m[41;99H30[28;30H[?12l[?25h[?25l[34ma[m[41;100H1[28;31H[?12l[?25h[?25l[34mn[m[41;100H2[28;32H[?12l[?25h[?25l[34md[m[41;100H3[28;33H[?12l[?25h[?25l[34mo[m[41;100H4[28;34H[?12l[?25h[?25l[34mm[m[41;100H5[28;35H[?12l[?25h[?25l[34m [m[41;100H6[28;36H[?12l[?25h[?25l[34mv[m[41;100H7[28;37H[?12l[?25h[?25l[34ma[m[41;100H8[28;38H[?12l[?25h[?25l[34ml[m[41;100H9[28;39H[?12l[?25h[?25l[34me[m[41;99H40[28;40H[?12l[?25h[?25l[28;39H[K[41;99H39[28;39H[?12l[?25h[?25l[34mu[m[41;99H40[28;40H[?12l[?25h[?25l[34me[m[41;100H1[28;41H[?12l[?25h[?25l[34ms[m[41;100H2[28;42H[?12l[?25h[?25l[34m [m[41;100H3[28;43H[?12l[?25h[?25l[34mt[m[41;100H4[28;44H[?12l[?25h[?25l[34mo[m[41;100H5[28;45H[?12l[?25h[?25l[34m [m[41;100H6[28;46H[?12l[?25h[?25l[34mg[m[41;100H7[28;47H[?12l[?25h[?25l[34me[m[41;100H8[28;48H[?12l[?25h[?25l[34mn[m[41;100H9[28;49H[?12l[?25h[?25l[34me[m[41;99H50[28;50H[?12l[?25h[?25l[34mr[m[41;100H1[28;51H[?12l[?25h[?25l[34ma[m[41;100H2[28;52H[?12l[?25h[?25l[34mt[m[41;100H3[28;53H[?12l[?25h[?25l[34me[m[41;100H4[28;54H[?12l[?25h[?25l[41;97H9[29;54H[?12l[?25h[?25l[41;96H30,30[30;30H[?12l[?25h[?25l[31;1H[K[41;97H1,1 [31;1H[?12l[?25h[?25l[32;1H[K[41;97H2[32;1H[?12l[?25h[?25l[41;99H2[32;2H[?12l[?25h[?25l[41;99H3[32;3H[?12l[?25h[?25l[41;99H4[32;4H[?12l[?25h[?25l[41;99H5[32;5H[?12l[?25h[?25l[34m// Generate random values and count occurrences[m
    [34m//     for (i = 0; i < num_values; i++) {[m[33;46H[K[34;1H    [34m//             value = generate_random_value();[m[34;52H[K[35;1H    [34m//                     counts[value]++; // Increment the count for the generated value[m[35;91H[K[36;1H    [34m//                         }[m[36;33H[K[33;45H[34m[106m{[36;32H}[m[41;97H6,33[36;33H[?12l[?25h[?25l[33;45H[34m{[36;32H}[m[41;97H5[35;33H[?12l[?25h[?25l[41;100H2[35;32H[?12l[?25h[?25l[41;100H1[35;31H[?12l[?25h[?25l[41;100H0[35;30H[?12l[?25h[?25l[41;99H29[35;29H[?12l[?25h[?25l[41;100H8[35;28H[?12l[?25h[?25l[41;100H7[35;27H[?12l[?25h[?25l[41;100H6[35;26H[?12l[?25h[?25l[41;100H5[35;25H[?12l[?25h[?25l[41;100H4[35;24H[?12l[?25h[?25l[41;100H3[35;23H[?12l[?25h[?25l[41;100H2[35;22H[?12l[?25h[?25l[41;100H1[35;21H[?12l[?25h[?25l[41;100H0[35;20H[?12l[?25h[?25l[41;99H19[35;19H[?12l[?25h[?25l[41;100H8[35;18H[?12l[?25h[?25l[41;97H4[34;18H[?12l[?25h[?25l[41;97H3[33;18H[?12l[?25h[?25l[34m[106m([26C)[m[41;100H7[33;17H[?12l[?25h[?25l[41;100H6[33;16H[?12l[?25h[?25l[34m([26C)[m[41;100H5[33;15H[?12l[?25h[?25l[41;100H4[33;14H[?12l[?25h[?25l[41;100H3[33;13H[?12l[?25h[?25l[41;100H2[33;12H[?12l[?25h[?25l[34mfor (i = 0; i < num_values; i++) {[m[33;45H[K[41;100H1[33;11H[?12l[?25h[?25l[34mfor (i = 0; i < num_values; i++) {[m[33;44H[K[41;100H0[33;10H[?12l[?25h[?25l[34mfor (i = 0; i < num_values; i++) {[m[33;43H[K[41;99H9 [33;9H[?12l[?25h[?25l[34mfor (i = 0; i < num_values; i++) {[m[33;42H[K[41;99H8[33;8H[?12l[?25h[?25l[34mfor (i = 0; i < num_values; i++) {[m[33;41H[K[41;99H7[33;7H[?12l[?25h[?25l/[38;5;130mfor[m (i = [31m0[m; i < num_values; i++) {[33;40H[K[41;99H6[33;6H[?12l[?25h[?25l[38;5;130mfor[m (i = [31m0[m; i < num_values; i++) {[33;39H[K[41;99H5[33;5H[?12l[?25h[?25l[41;97H2[32;5H[?12l[?25h[?25l[41;97H1,1[31;1H[?12l[?25h[?25l[41;97H2,5[32;5H[?12l[?25h[?25l[41;97H3[33;5H[?12l[?25h[?25l[41;99H6[33;6H[?12l[?25h[?25l[41;99H7[33;7H[?12l[?25h[?25l[41;99H8[33;8H[?12l[?25h[?25l [106m([26C)[m[41;99H9[33;9H[?12l[?25h[?25l[41;99H10[33;10H[?12l[?25h[?25l([26C)[41;100H1[33;11H[?12l[?25h[?25l[41;100H2[33;12H[?12l[?25h[?25l[41;100H3[33;13H[?12l[?25h[?25l[41;97H4[34;13H[?12l[?25h[?25l[41;100H4[34;14H[?12l[?25h[?25l[41;100H5[34;15H[?12l[?25h[?25l[41;100H6[34;16H[?12l[?25h[?25l[41;100H7[34;17H[?12l[?25h[?25l[41;100H8[34;18H[?12l[?25h[?25l[41;100H9[34;19H[?12l[?25h[?25l[41;99H20[34;20H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;51H[K[41;99H19[34;19H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;50H[K[41;100H8[34;18H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;49H[K[41;100H7[34;17H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;48H[K[41;100H6[34;16H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;47H[K[41;100H5[34;15H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;46H[K[41;100H4[34;14H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;45H[K[41;100H3[34;13H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;44H[K[41;100H2[34;12H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;43H[K[41;100H1[34;11H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;42H[K[41;100H0[34;10H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;41H[K[41;99H9 [34;9H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;40H[K[41;99H8[34;8H[?12l[?25h[?25l[34mvalue = generate_random_value();[m[34;39H[K[41;99H7[34;7H[?12l[?25h[?25l/value = generate_random_value();[34;38H[K[41;99H6[34;6H[?12l[?25h[?25lvalue = generate_random_value();[34;37H[K[41;99H5[34;5H[?12l[?25h[?25l value = generate_random_value();[41;99H6[34;6H[?12l[?25h[?25l value = generate_random_value();[41;99H7[34;7H[?12l[?25h[?25l value = generate_random_value();[41;99H8[34;8H[?12l[?25h[?25l value = generate_random_value();[41;99H9[34;9H[?12l[?25h[?25l[41;97H5[35;9H[?12l[?25h[?25l[41;99H10[35;10H[?12l[?25h[?25l[41;100H1[35;11H[?12l[?25h[?25l[41;100H2[35;12H[?12l[?25h[?25l[41;100H3[35;13H[?12l[?25h[?25l[41;100H4[35;14H[?12l[?25h[?25l[41;100H5[35;15H[?12l[?25h[?25l[41;100H6[35;16H[?12l[?25h[?25l[41;100H7[35;17H[?12l[?25h[?25l[41;100H8[35;18H[?12l[?25h[?25l[41;100H9[35;19H[?12l[?25h[?25l[41;99H20[35;20H[?12l[?25h[?25l[41;100H1[35;21H[?12l[?25h[?25l[41;100H2[35;22H[?12l[?25h[?25l[41;100H3[35;23H[?12l[?25h[?25l[41;100H4[35;24H[?12l[?25h[?25l[41;100H5[35;25H[?12l[?25h[?25l[41;100H6[35;26H[?12l[?25h[?25l[41;100H7[35;27H[?12l[?25h[?25l[41;100H8[35;28H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;90H[K[41;100H7[35;27H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;89H[K[41;100H6[35;26H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;88H[K[41;100H5[35;25H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;87H[K[41;100H4[35;24H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;86H[K[41;100H3[35;23H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;85H[K[41;100H2[35;22H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;84H[K[41;100H1[35;21H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;83H[K[41;100H0[35;20H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;82H[K[41;99H19[35;19H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;81H[K[41;100H8[35;18H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;80H[K[41;100H7[35;17H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;79H[K[41;100H6[35;16H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;78H[K[41;100H5[35;15H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;77H[K[41;100H4[35;14H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;76H[K[41;100H3[35;13H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;75H[K[41;100H2[35;12H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;74H[K[41;100H1[35;11H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;73H[K[41;100H0[35;10H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;72H[K[41;99H9 [35;9H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;71H[K[41;99H8[35;8H[?12l[?25h[?25l[34mcounts[value]++; // Increment the count for the generated value[m[35;70H[K[41;99H7[35;7H[?12l[?25h[?25l/counts[value]++; [34m// Increment the count for the generated value[m[35;69H[K[41;99H6[35;6H[?12l[?25h[?25lcounts[value]++; [34m// Increment the count for the generated value[m[35;68H[K[41;99H5[35;5H[?12l[?25h[?25l counts[value]++; [1C[34m/ Increment the count for the generated value[m[41;99H6[35;6H[?12l[?25h[?25l counts[value]++; [1C[34m/ Increment the count for the generated value[m[41;99H7[35;7H[?12l[?25h[?25l counts[value]++; [1C[34m/ Increment the count for the generated value[m[41;99H8[35;8H[?12l[?25h[?25l counts[value]++; [1C[34m/ Increment the count for the generated value[m[41;99H9[35;9H[?12l[?25h[?25l[41;97H6[36;9H[?12l[?25h[?25l[41;99H10[36;10H[?12l[?25h[?25l[41;99H9 [36;9H[?12l[?25h[?25l[22C[34m}[m[36;32H[K[41;99H8[36;8H[?12l[?25h[?25l[22C[34m}[m[36;31H[K[41;99H7[36;7H[?12l[?25h[?25l/                       }[36;30H[K[41;99H6[36;6H[?12l[?25h[?25l [22C}[36;29H[K[41;99H5[36;5H[?12l[?25h[?25l[41;99H6[36;6H[?12l[?25h[?25l[41;99H7[36;7H[?12l[?25h[?25l[41;99H8[36;8H[?12l[?25h[?25l[41;99H9[36;9H[?12l[?25h[?25l[41;99H10[36;10H[?12l[?25h[?25l[41;100H1[36;11H[?12l[?25h[?25l[41;100H2[36;12H[?12l[?25h[?25l[41;100H3[36;13H[?12l[?25h[?25l[41;100H4[36;14H[?12l[?25h[?25l[41;100H5[36;15H[?12l[?25h[?25l[41;100H6[36;16H[?12l[?25h[?25l[41;100H7[36;17H[?12l[?25h[?25l[41;100H8[36;18H[?12l[?25h[?25l[41;100H9[36;19H[?12l[?25h[?25l[41;99H20[36;20H[?12l[?25h[?25l[41;100H1[36;21H[?12l[?25h[?25l[41;100H2[36;22H[?12l[?25h[?25l[41;100H3[36;23H[?12l[?25h[?25l[41;100H4[36;24H[?12l[?25h[?25l[41;100H5[36;25H[?12l[?25h[?25l[41;100H6[36;26H[?12l[?25h[?25l[41;100H7[36;27H[?12l[?25h[?25l[33;38H[106m{[36;28H}[m[41;100H8[36;28H[?12l[?25h[?25l}[106m }[m[36;28H[K[41;100H7[36;27H[?12l[?25h[?25l}[106m }[m[36;27H[K[41;100H6[36;26H[?12l[?25h[?25l}[106m }[m[36;26H[K[41;100H5[36;25H[?12l[?25h[?25l}[106m }[m[36;25H[K[41;100H4[36;24H[?12l[?25h[?25l}[106m }[m[36;24H[K[41;100H3[36;23H[?12l[?25h[?25l}[106m }[m[36;23H[K[41;100H2[36;22H[?12l[?25h[?25l}[106m }[m[36;22H[K[41;100H1[36;21H[?12l[?25h[?25l}[106m }[m[36;21H[K[41;100H0[36;20H[?12l[?25h[?25l}[106m }[m[36;20H[K[41;99H19[36;19H[?12l[?25h[?25l}[106m }[m[36;19H[K[41;100H8[36;18H[?12l[?25h[?25l}[106m }[m[36;18H[K[41;100H7[36;17H[?12l[?25h[?25l}[106m }[m[36;17H[K[41;100H6[36;16H[?12l[?25h[?25l}[106m }[m[36;16H[K[41;100H5[36;15H[?12l[?25h[?25l}[106m }[m[36;15H[K[41;100H4[36;14H[?12l[?25h[?25l}[106m }[m[36;14H[K[41;100H3[36;13H[?12l[?25h[?25l}[106m }[m[36;13H[K[41;100H2[36;12H[?12l[?25h[?25l}[106m }[m[36;12H[K[41;100H1[36;11H[?12l[?25h[?25l}[106m }[m[36;11H[K[41;100H0[36;10H[?12l[?25h[?25l}[106m }[m[36;10H[K[41;99H9 [36;9H[?12l[?25h[?25l}[106m }[m[36;9H[K[41;99H8[36;8H[?12l[?25h[?25l}[106m }[m[36;8H[K[41;99H7[36;7H[?12l[?25h[?25l}[106m }[m[36;7H[K[41;99H6[36;6H[?12l[?25h[?25l}[106m }[m[36;6H[K[41;99H5[36;5H[?12l[?25h[?25l[41;99H6[36;6H[?12l[?25h[?25l[37;1H[K[33;38H{[36;5H}[41;97H7,1[37;1H[?12l[?25h[?25l[38;1H[K[41;97H8[38;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[37;1Hprintf([31m"Counts:[m[35m\n[m[31m"[m);
    [38;5;130mfor[m (i = [31m0[m; i < [31m4[m; i++) {[38;30H[K[39;1H        printf([31m"Value [m[35m%d[m[31m: [m[35m%d\n[m[31m"[m, i, counts[i]);[39;48H[K[40;5H}[41;96H[K[41;96H41,6[10CBot[38;29H[106m{[40;5H}[?12l[?25h[?25l[m[38;29H{[40;5H}[41;97H0[39;6H[?12l[?25h[?25l[41;96H39[38;6H[?12l[?25h[?25l[41;97H8[37;6H[?12l[?25h[?25l[41;99H5[37;5H[?12l[?25h[?25l[41;99H4[37;4H[?12l[?25h[?25l[41;99H3[37;3H[?12l[?25h[?25l[41;99H2[37;2H[?12l[?25h[?25l[41;99H1[37;1H[?12l[?25h[?25l printf([31m"Counts:[m[35m\n[m[31m"[m);[41;99H2[37;2H[?12l[?25h[?25l printf([31m"Counts:[m[35m\n[m[31m"[m);[41;99H3[37;3H[?12l[?25h[?25l printf([31m"Counts:[m[35m\n[m[31m"[m);[41;99H4[37;4H[?12l[?25h[?25l printf([31m"Counts:[m[35m\n[m[31m"[m);[41;99H5[37;5H[?12l[?25h[?25l[41;97H7,1[36;1H[?12l[?25h[?25l[37;40r[37;1H[L[1;41r[41;96H[K[41;96H38,1[10C50%[37;1H[?12l[?25h[?25l[41;97H9[38;1H[?12l[?25h[?25l[41;97H8[37;1H[?12l[?25h[?25l[41;99H2[37;2H[?12l[?25h[?25l[41;99H3[37;3H[?12l[?25h[?25l[41;99H4[37;4H[?12l[?25h[?25l[41;99H5[37;5H[?12l[?25h[?25l/[41;99H6[37;6H[?12l[?25h[?25l[34m//[m[41;99H7[37;7H[?12l[?25h[?25l[34m [m[41;99H8[37;8H[?12l[?25h[?25l[34mD[m[41;99H9[37;9H[?12l[?25h[?25l[34mi[m[41;99H10[37;10H[?12l[?25h[?25l[34ms[m[41;100H1[37;11H[?12l[?25h[?25l[34mp[m[41;100H2[37;12H[?12l[?25h[?25l[34ml[m[41;100H3[37;13H[?12l[?25h[?25l[34ma[m[41;100H4[37;14H[?12l[?25h[?25l[34my[m[41;100H5[37;15H[?12l[?25h[?25l[34m [m[41;100H6[37;16H[?12l[?25h[?25l[34mt[m[41;100H7[37;17H[?12l[?25h[?25l[34mh[m[41;100H8[37;18H[?12l[?25h[?25l[34me[m[41;100H9[37;19H[?12l[?25h[?25l[34m [m[41;99H20[37;20H[?12l[?25h[?25l[34mc[m[41;100H1[37;21H[?12l[?25h[?25l[34mo[m[41;100H2[37;22H[?12l[?25h[?25l[34mu[m[41;100H3[37;23H[?12l[?25h[?25l[34mn[m[41;100H4[37;24H[?12l[?25h[?25l[34mt[m[41;100H5[37;25H[?12l[?25h[?25l[34mr[m[41;100H6[37;26H[?12l[?25h[?25l[34ms[m[41;100H7[37;27H[?12l[?25h[?25l[37;26H[K[41;100H6[37;26H[?12l[?25h[?25l[37;25H[K[41;100H5[37;25H[?12l[?25h[?25l[34ms[m[41;100H6[37;26H[?12l[?25h[?25l[41;97H9,25[38;25H[?12l[?25h[?25l[41;96H40,26[39;26H[?12l[?25h[?25l[41;97H1[40;26H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H}[41;96H[K[41;96H42,6[10CBot[38;29H[106m{[40;5H}[?12l[?25h[?25l[1;40r[m[40;1H
[1;41r[41;96H[K[41;96H43,1[10CBot[37;29H{[39;5H}
[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H44,1[10CBot[40;1H[?12l[?25h[?25l[41;99H2[40;2H[?12l[?25h[?25l[41;99H3[40;3H[?12l[?25h[?25l[41;99H4[40;4H[?12l[?25h[?25l[1;40r[1;1H[4M[1;41r[36;4Hprintf([31m"Percentages:[m[35m\n[m[31m"[m);
    [38;5;130mfor[m (i = [31m0[m; i < [31m4[m; i++) {[38;9Hpercentage = (counts[i] / ([32mfloat[m)num_values) * [31m100[m;[39;9Hprintf([31m"Value [m[35m%d[m[31m: [m[35m%.1f%%\n[m[31m"[m, i, percentage);
    }[41;96H[K[41;96H48,6[10CBot[37;29H[106m{[40;5H}[?12l[?25h[?25l[m[37;29H{[40;5H}[41;97H7[39;6H[?12l[?25h[?25l[41;97H6[38;6H[?12l[?25h[?25l[41;97H5[37;6H[?12l[?25h[?25l[41;97H4[36;6H[?12l[?25h[?25l[41;99H5[36;5H[?12l[?25h[?25l[41;99H4[36;4H[?12l[?25h[?25l printf([31m"Percentages:[m[35m\n[m[31m"[m);[41;99H5[36;5H[?12l[?25h[?25l[41;97H5[37;5H[?12l[?25h[?25l[41;97H6[38;5H[?12l[?25h[?25l[41;97H7[39;5H[?12l[?25h[?25l[37;29H[106m{[40;5H}[m[41;97H8[40;5H[?12l[?25h[?25l[41;99H6[40;6H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H49,1[10CBot[36;29H{[39;5H}
[?12l[?25h[?25l[41;97H8[39;1H[?12l[?25h[?25l[41;97H7[38;1H[?12l[?25h[?25l[41;97H6[37;1H[?12l[?25h[?25l[41;97H5[36;1H[?12l[?25h[?25l[41;97H4[35;1H[?12l[?25h[?25l[41;97H3[34;1H[?12l[?25h[?25l[41;99H2[34;2H[?12l[?25h[?25l[35;40r[35;1H[L[1;41r[41;96H[K[41;96H44,1[10C90%[35;1H[?12l[?25h[?25l[41;99H2[35;2H[?12l[?25h[?25l[41;99H3[35;3H[?12l[?25h[?25l[41;99H4[35;4H[?12l[?25h[?25l[41;99H5[35;5H[?12l[?25h[?25l/[41;99H6[35;6H[?12l[?25h[?25l[34m//[m[41;99H7[35;7H[?12l[?25h[?25l[34m [m[41;99H8[35;8H[?12l[?25h[?25l[34mC[m[41;99H9[35;9H[?12l[?25h[?25l[34ma[m[41;99H10[35;10H[?12l[?25h[?25l[34ml[m[41;100H1[35;11H[?12l[?25h[?25l[34mu[m[41;100H2[35;12H[?12l[?25h[?25l[35;11H[K[41;100H1[35;11H[?12l[?25h[?25l[34mc[m[41;100H2[35;12H[?12l[?25h[?25l[34mi[m[41;100H3[35;13H[?12l[?25h[?25l[34ml[m[41;100H4[35;14H[?12l[?25h[?25l[34ma[m[41;100H5[35;15H[?12l[?25h[?25l[34mt[m[41;100H6[35;16H[?12l[?25h[?25l[34me[m[41;100H7[35;17H[?12l[?25h[?25l[35;16H[K[41;100H6[35;16H[?12l[?25h[?25l[35;15H[K[41;100H5[35;15H[?12l[?25h[?25l[35;14H[K[41;100H4[35;14H[?12l[?25h[?25l[35;13H[K[41;100H3[35;13H[?12l[?25h[?25l[35;12H[K[41;100H2[35;12H[?12l[?25h[?25l[34mi[m[41;100H3[35;13H[?12l[?25h[?25l[35;12H[K[41;100H2[35;12H[?12l[?25h[?25l[34mu[m[41;100H3[35;13H[?12l[?25h[?25l[34ml;[m[41;100H5[35;15H[?12l[?25h[?25l[34ma[m[41;100H6[35;16H[?12l[?25h[?25l[34mt[m[41;100H7[35;17H[?12l[?25h[?25l[34me[m[41;100H8[35;18H[?12l[?25h[?25l[34m [m[41;100H9[35;19H[?12l[?25h[?25l[35;18H[K[41;100H8[35;18H[?12l[?25h[?25l[35;17H[K[41;100H7[35;17H[?12l[?25h[?25l[35;16H[K[41;100H6[35;16H[?12l[?25h[?25l[35;15H[K[41;100H5[35;15H[?12l[?25h[?25l[35;14H[K[41;100H4[35;14H[?12l[?25h[?25l[34ma[m[41;100H5[35;15H[?12l[?25h[?25l[34mt[m[41;100H6[35;16H[?12l[?25h[?25l[34me[m[41;100H7[35;17H[?12l[?25h[?25l[34m [m[41;100H8[35;18H[?12l[?25h[?25l[34ma[m[41;100H9[35;19H[?12l[?25h[?25l[34mn[m[41;99H20[35;20H[?12l[?25h[?25l[34md[m[41;100H1[35;21H[?12l[?25h[?25l[34m [m[41;100H2[35;22H[?12l[?25h[?25l[34md[m[41;100H3[35;23H[?12l[?25h[?25l[34mu[m[41;100H4[35;24H[?12l[?25h[?25l[34ms[m[41;100H5[35;25H[?12l[?25h[?25l[34mp[m[41;100H6[35;26H[?12l[?25h[?25l[34ml[m[41;100H7[35;27H[?12l[?25h[?25l[34ma[m[41;100H8[35;28H[?12l[?25h[?25l[35;27H[K[41;100H7[35;27H[?12l[?25h[?25l[35;26H[K[41;100H6[35;26H[?12l[?25h[?25l[35;25H[K[41;100H5[35;25H[?12l[?25h[?25l[35;24H[K[41;100H4[35;24H[?12l[?25h[?25l[35;23H[K[41;100H3[35;23H[?12l[?25h[?25l[34mi[m[41;100H4[35;24H[?12l[?25h[?25l[34ms[m[41;100H5[35;25H[?12l[?25h[?25l[34mp[m[41;100H6[35;26H[?12l[?25h[?25l[34ml[m[41;100H7[35;27H[?12l[?25h[?25l[34ma[m[41;100H8[35;28H[?12l[?25h[?25l[34my[m[41;100H9[35;29H[?12l[?25h[?25l[34m [m[41;99H30[35;30H[?12l[?25h[?25l[34mp[m[41;100H1[35;31H[?12l[?25h[?25l[34me[m[41;100H2[35;32H[?12l[?25h[?25l[34mr[m[41;100H3[35;33H[?12l[?25h[?25l[35;32H[K[41;100H2[35;32H[?12l[?25h[?25l[34mc[m[41;100H3[35;33H[?12l[?25h[?25l[34me[m[41;100H4[35;34H[?12l[?25h[?25l[34mn[m[41;100H5[35;35H[?12l[?25h[?25l[34mt[m[41;100H6[35;36H[?12l[?25h[?25l[34ma[m[41;100H7[35;37H[?12l[?25h[?25l[34mg[m[41;100H8[35;38H[?12l[?25h[?25l[34me[m[41;100H9[35;39H[?12l[?25h[?25l[34ms[m[41;99H40[35;40H[?12l[?25h[?25l[34m [m[41;100H1[35;41H[?12l[?25h[?25l[34mo[m[41;100H2[35;42H[?12l[?25h[?25l[34mf[m[41;100H3[35;43H[?12l[?25h[?25l[34m [m[41;100H4[35;44H[?12l[?25h[?25l[34mm[m[41;100H5[35;45H[?12l[?25h[?25l[34mu[m[41;100H6[35;46H[?12l[?25h[?25l[35;45H[K[41;100H5[35;45H[?12l[?25h[?25l[35;44H[K[41;100H4[35;44H[?12l[?25h[?25l[34me[m[41;100H5[35;45H[?12l[?25h[?25l[34ma[m[41;100H6[35;46H[?12l[?25h[?25l[34mc[m[41;100H7[35;47H[?12l[?25h[?25l[34mh[m[41;100H8[35;48H[?12l[?25h[?25l[34m [m[41;100H9[35;49H[?12l[?25h[?25l[34mn[m[41;99H50[35;50H[?12l[?25h[?25l[34mu[m[41;100H1[35;51H[?12l[?25h[?25l[34mm[m[41;100H2[35;52H[?12l[?25h[?25l[34mb[m[41;100H3[35;53H[?12l[?25h[?25l[34me[m[41;100H4[35;54H[?12l[?25h[?25l[34mr[m[41;100H5[35;55H[?12l[?25h[?25l[37;29H[106m{[40;5H}[m[41;97H6,30[37;30H[?12l[?25h[?25l{[38;29H[106m[[mi[106m][m[40;5H}[41;97H7[38;30H[?12l[?25h[?25l[i][41;97H8[39;30H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H50,1[10CBot[40;1H[?12l[?25h[?25l[36;29H[106m{[39;5H}[m[41;96H49,6[39;6H[?12l[?25h[?25l[36;29H{[39;5H}[41;96H50,1[10C90%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H51,1[10C91%[40;1H[?12l[?25h[?25l[41;99H2[40;2H[?12l[?25h[?25l[41;99H3[40;3H[?12l[?25h[?25l[41;99H4[40;4H[?12l[?25h[?25l[41;99H5[40;5H[?12l[?25h[?25lr[41;99H6[40;6H[?12l[?25h[?25la[41;99H7[40;7H[?12l[?25h[?25l[40;6H[K[41;99H6[40;6H[?12l[?25h[?25le[41;99H7[40;7H[?12l[?25h[?25lt[41;99H8[40;8H[?12l[?25h[?25lu[41;99H9[40;9H[?12l[?25h[?25lr[41;99H10[40;10H[?12l[?25h[?25l[38;5;130mreturn[m[41;100H1[40;11H[?12l[?25h[?25l[41;100H2[40;12H[?12l[?25h[?25l[31m0[m[41;100H3[40;13H[?12l[?25h[?25l;[41;100H4[40;14H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H52,1[10C92%[40;1H[?12l[?25h[?25l[97m[101m][m[41;99H2[40;2H[?12l[?25h[?25l[40;1H[K[41;99H1[40;1H[?12l[?25h[?25l}[3;12H[106m{[40;1H}[m[41;99H2[40;2H[?12l[?25h[?25l[3;12H{[40;1H}[41;97H0,1[38;1H[?12l[?25h[?25l[41;96H49,2[37;2H[?12l[?25h[?25l[41;97H8[36;2H[?12l[?25h[?25l[41;97H6[34;2H[?12l[?25h[?25l[41;97H5[33;2H[?12l[?25h[?25l[41;97H4[32;2H[?12l[?25h[?25l[41;97H3[31;2H[?12l[?25h[?25l[41;97H2[30;2H[?12l[?25h[?25l[41;97H1[29;2H[?12l[?25h[?25l[41;97H0[28;2H[?12l[?25h[?25l[41;96H39[27;2H[?12l[?25h[?25l[41;97H8[26;2H[?12l[?25h[?25l[41;97H7,1[25;1H[?12l[?25h[?25l[41;97H6,2[24;2H[?12l[?25h[?25l[41;97H4[22;2H[?12l[?25h[?25l[41;97H5[23;2H[?12l[?25h[?25l[41;97H7,1[25;1H[?12l[?25h[?25l[41;97H8,2[26;2H[?12l[?25h[?25l[41;97H9[27;2H[?12l[?25h[?25l[41;96H43[31;2H[?12l[?25h[?25l[41;97H6[34;2H[?12l[?25h[?25l[41;97H9[37;2H[?12l[?25h[?25l[41;96H51[39;2H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H53,1[10CBot[40;1H[?12l[?25h[41;1H[K[?25l[41;96H53,0-1[8CBot[40;1H[?12l[?25h[?25l[2;12H[106m{[39;1H}[m[41;97H2,1  [39;1H[?12l[?25h[?25l[2;12H{[39;1H}[41;97H1[38;1H[?12l[?25h[?25l[41;97H0,0-1[37;1H[?12l[?25h[?25l[41;96H49,1  [36;1H[?12l[?25h[?25l[41;97H8[35;1H[?12l[?25h[?25l[41;97H7[34;1H[?12l[?25h[?25l[41;97H6[33;1H[?12l[?25h[?25l[41;97H5[32;1H[?12l[?25h[?25l[41;97H4[31;1H[?12l[?25h[?25l[41;97H3[30;1H[?12l[?25h[?25l[41;97H2[29;1H[?12l[?25h[?25l[41;97H1[28;1H[?12l[?25h[?25l[41;97H0[27;1H[?12l[?25h[?25l[41;96H39[26;1H[?12l[?25h[?25l[41;97H8[25;1H[?12l[?25h[?25l[41;97H7,0-1[24;1H[?12l[?25h[?25l[41;97H6,1  [23;1H[?12l[?25h[?25l[41;97H5[22;1H[?12l[?25h[?25l[41;97H4[21;1H[?12l[?25h[?25l[41;97H3[20;1H[?12l[?25h[?25l[41;97H2[19;1H[?12l[?25h[?25l[41;97H1,0-1[18;1H[?12l[?25h[?25l[41;97H0,1  [17;1H[?12l[?25h[?25l[41;96H29[16;1H[?12l[?25h[?25l[41;97H8[15;1H[?12l[?25h[?25l[41;97H7,0-1[14;1H[?12l[?25h[?25l[41;97H6,1  [13;1H[?12l[?25h[?25l[41;97H5[12;1H[?12l[?25h[?25l[41;97H4[11;1H[?12l[?25h[?25l[41;97H3[10;1H[?12l[?25h[?25l[41;97H2,0-1[9;1H[?12l[?25h[?25l[41;97H1,1  [8;1H[?12l[?25h[?25l[41;97H0[7;1H[?12l[?25h[?25l[41;96H19[6;1H[?12l[?25h[?25l[41;97H8[5;1H[?12l[?25h[?25l[41;97H7[4;1H[?12l[?25h[?25l[41;97H6[3;1H[?12l[?25h[?25l[41;97H5[2;1H[?12l[?25h[?25l[41;97H4,0-1[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H}[41;96H[K[41;96H13,1[10C92%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;5H[38;5;130mreturn[m rand() % [31m4[m; [34m// Generates a value from 0 to 3[m[41;96H[K[41;96H12,1[10C84%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[32mint[m generate_random_value() {[41;96H[K[41;96H11,1[10C76%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m// Generate random value between 0 and 3[m[41;96H[K[41;96H10,1[10C69%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;96H[K[41;96H9,0-1[9C61%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[35m#include [m[31m<stdlib.h>[m[41;96H[K[41;96H8,1[11C53%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[35m#include [m[31m<stdio.h>[m[41;96H[K[41;96H7,1[11C46%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;96H[K[41;96H6,0-1[9C38%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m */[m[41;96H[K[41;96H5,1[11C30%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;96H[K[41;96H4,0-1[9C23%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m  Linn Klofta  [m[41;96H[K[41;96H3,1[11C15%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m  random numbers from 0 to 3 counter[m[41;96H[K[41;96H2,1[12C7%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m/*[m[41;96H[K[41;96H1,1[11CTop[1;1H[?12l[?25h[?25l[41;96H2[2;1H[?12l[?25h[?25l[41;96H3[3;1H[?12l[?25h[?25l[41;96H4,0-1[4;1H[?12l[?25h[?25l[41;96H5,1  [5;1H[?12l[?25h[?25l[41;96H6,0-1[6;1H[?12l[?25h[?25l[41;96H7,1  [7;1H[?12l[?25h[?25l[41;96H8[8;1H[?12l[?25h[?25l[41;96H9,0-1[9;1H[?12l[?25h[?25l[41;96H10,1 [10;1H[?12l[?25h[?25l[41;97H1[11;1H[?12l[?25h[?25l[41;97H2[12;1H[?12l[?25h[?25l[11;29H[106m{

}[m[41;97H3[13;1H[?12l[?25h[?25l[11;29H{

}[41;97H4,0-1[14;1H[?12l[?25h[?25l[41;97H5,1  [15;1H[?12l[?25h[?25l[41;97H6[16;1H[?12l[?25h[?25l[41;97H7[17;1H[?12l[?25h[?25l[41;97H8[18;1H[?12l[?25h[?25l[41;97H9[19;1H[?12l[?25h[?25l[41;96H20[20;1H[?12l[?25h[?25l[41;97H1[21;1H[?12l[?25h[?25l[41;97H2,0-1[22;1H[?12l[?25h[?25l[41;97H3,1  [23;1H[?12l[?25h[?25l[41;97H4[24;1H[?12l[?25h[?25l[41;97H5[25;1H[?12l[?25h[?25l[41;97H6[26;1H[?12l[?25h[?25l[41;97H7,0-1[27;1H[?12l[?25h[?25l[41;97H8,1  [28;1H[?12l[?25h[?25l[41;97H9[29;1H[?12l[?25h[?25l[41;96H30[30;1H[?12l[?25h[?25l[41;97H1,0-1[31;1H[?12l[?25h[?25l[41;97H2,1  [32;1H[?12l[?25h[?25l[41;97H3[33;1H[?12l[?25h[?25l[41;97H4[34;1H[?12l[?25h[?25l[41;97H5[35;1H[?12l[?25h[?25l[41;97H6[36;1H[?12l[?25h[?25l[41;97H7,0-1[37;1H[?12l[?25h[?25l[41;97H8,1  [38;1H[?12l[?25h[?25l[41;97H9[39;1H[?12l[?25h[?25l[41;96H40[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hprintf([31m"Value [m[35m%d[m[31m: [m[35m%d\n[m[31m"[m, i, counts[i]);[41;96H[K[41;96H41,1[11C7%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H}[41;96H[K[41;96H42,1[10C15%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H43,1[10C23%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[34m// Calculate and display pecentages of each number[m[41;96H[K[41;96H44,1[10C30%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5Hprintf([31m"Percentages:[m[35m\n[m[31m"[m);[41;96H[K[41;96H45,1[10C38%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mfor[m (i = [31m0[m; i < [31m4[m; i++) {[41;96H[K[41;96H46,1[10C46%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hpercentage = (counts[i] / ([32mfloat[m)num_values) * [31m100[m;[41;96H[K[41;96H47,1[10C53%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hprintf([31m"Value [m[35m%d[m[31m: [m[35m%.1f%%\n[m[31m"[m, i, percentage);[41;96H[K[41;96H48,1[10C61%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H}[41;96H[K[41;96H49,1[10C69%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H50,0-1[8C76%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mreturn[m [31m0[m;[41;96H[K[41;96H51,1[10C84%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[3;12H[106m{[40;1H}[m[41;96H[K[41;96H52,1[10C92%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[2;12H{[39;1H}[41;96H[K[41;96H53,0-1[8CBot[40;1H[?12l[?25h[?25l[2;12H[106m{[39;1H}[m[41;97H2,1  [39;1H[?12l[?25h[?25l[2;12H{[39;1H}[41;97H1[38;1H[?12l[?25h[?25l[41;97H0,0-1[37;1H[?12l[?25h[?25l[41;96H49,1  [36;1H[?12l[?25h[?25l[41;97H8[35;1H[?12l[?25h[?25l[41;97H7[34;1H[?12l[?25h[?25l[41;97H6[33;1H[?12l[?25h[?25l[41;97H5[32;1H[?12l[?25h[?25l[41;97H4[31;1H[?12l[?25h[?25l[41;97H3[30;1H[?12l[?25h[?25l[41;97H2[29;1H[?12l[?25h[?25l[41;97H1[28;1H[?12l[?25h[?25l[41;97H0[27;1H[?12l[?25h[?25l[41;96H39[26;1H[?12l[?25h[?25l[41;97H8[25;1H[?12l[?25h[?25l[41;97H7,0-1[24;1H[?12l[?25h[?25l[41;97H6,1  [23;1H[?12l[?25h[?25l[41;97H5[22;1H[?12l[?25h[?25l[41;97H4[21;1H[?12l[?25h[?25l[41;97H3[20;1H[?12l[?25h[?25l[41;97H2[19;1H[?12l[?25h[?25l[41;97H1,0-1[18;1H[?12l[?25h[?25l[41;97H0,1  [17;1H[?12l[?25h[?25l[41;96H29[16;1H[?12l[?25h[?25l[41;97H8[15;1H[?12l[?25h[?25l[41;97H7,0-1[14;1H[?12l[?25h[?25l[41;97H6,1  [13;1H[?12l[?25h[?25l[41;97H5[12;1H[?12l[?25h[?25l[41;97H4[11;1H[?12l[?25h[?25l[41;97H3[10;1H[?12l[?25h[?25l[41;97H2,0-1[9;1H[?12l[?25h[?25l[41;97H1,1  [8;1H[?12l[?25h[?25l[41;97H0[7;1H[?12l[?25h[?25l[41;96H19[6;1H[?12l[?25h[?25l[41;97H8[5;1H[?12l[?25h[?25l[41;97H7[4;1H[?12l[?25h[?25l[41;97H6[3;1H[?12l[?25h[?25l[41;97H5[2;1H[?12l[?25h[?25l[41;97H4,0-1[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H}[41;96H[K[41;96H13,1[10C92%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;5H[38;5;130mreturn[m rand() % [31m4[m; [34m// Generates a value from 0 to 3[m[41;96H[K[41;96H12,1[10C84%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[32mint[m generate_random_value() {[41;96H[K[41;96H11,1[10C76%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m// Generate random value between 0 and 3[m[41;96H[K[41;96H10,1[10C69%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;96H[K[41;96H9,0-1[9C61%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[35m#include [m[31m<stdlib.h>[m[41;96H[K[41;96H8,1[11C53%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[35m#include [m[31m<stdio.h>[m[41;96H[K[41;96H7,1[11C46%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;96H[K[41;96H6,0-1[9C38%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m */[m[41;96H[K[41;96H5,1[11C30%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[41;96H[K[41;96H4,0-1[9C23%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m  Linn Klofta  [m[41;96H[K[41;96H3,1[11C15%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m  random numbers from 0 to 3 counter[m[41;96H[K[41;96H2,1[12C7%[1;1H[?12l[?25h[?25l[1;40r[1;1H[L[1;41r[1;1H[34m/*[m[41;96H[K[41;96H1,1[11CTop[1;1H[?12l[?25h[?25l[41;96H2[2;1H[?12l[?25h[?25l[41;96H3[3;1H[?12l[?25h[?25l[41;96H4,0-1[4;1H[?12l[?25h[?25l[41;96H5,1  [5;1H[?12l[?25h[?25l[41;96H6,0-1[6;1H[?12l[?25h[?25l[41;96H7,1  [7;1H[?12l[?25h[?25l[41;96H8[8;1H[?12l[?25h[?25l[41;96H9,0-1[9;1H[?12l[?25h[?25l[41;96H10,1 [10;1H[?12l[?25h[?25l[41;97H1[11;1H[?12l[?25h[?25l[41;97H2[12;1H[?12l[?25h[?25l[11;29H[106m{

}[m[41;97H3[13;1H[?12l[?25h[?25l[11;29H{

}[41;97H4,0-1[14;1H[?12l[?25h[?25l[41;97H5,1  [15;1H[?12l[?25h[?25l[41;97H6[16;1H[?12l[?25h[?25l[41;97H7[17;1H[?12l[?25h[?25l[41;97H8[18;1H[?12l[?25h[?25l[41;97H9[19;1H[?12l[?25h[?25l[41;96H20[20;1H[?12l[?25h[?25l[41;97H1[21;1H[?12l[?25h[?25l[41;97H2,0-1[22;1H[?12l[?25h[?25l[41;97H3,1  [23;1H[?12l[?25h[?25l[41;97H4[24;1H[?12l[?25h[?25l[41;97H5[25;1H[?12l[?25h[?25l[41;97H6[26;1H[?12l[?25h[?25l[41;97H7,0-1[27;1H[?12l[?25h[?25l[41;97H8,1  [28;1H[?12l[?25h[?25l[41;97H9[29;1H[?12l[?25h[?25l[41;96H30[30;1H[?12l[?25h[?25l[41;97H1,0-1[31;1H[?12l[?25h[?25l[41;97H2,1  [32;1H[?12l[?25h[?25l[41;97H3[33;1H[?12l[?25h[?25l[41;97H4[34;1H[?12l[?25h[?25l[41;97H5[35;1H[?12l[?25h[?25l[41;97H6[36;1H[?12l[?25h[?25l[41;97H7,0-1[37;1H[?12l[?25h[?25l[41;97H8,1  [38;1H[?12l[?25h[?25l[41;97H9[39;1H[?12l[?25h[?25l[41;96H40[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hprintf([31m"Value [m[35m%d[m[31m: [m[35m%d\n[m[31m"[m, i, counts[i]);[41;96H[K[41;96H41,1[11C7%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H}[41;96H[K[41;96H42,1[10C15%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H43,1[10C23%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[34m// Calculate and display pecentages of each number[m[41;96H[K[41;96H44,1[10C30%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5Hprintf([31m"Percentages:[m[35m\n[m[31m"[m);[41;96H[K[41;96H45,1[10C38%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mfor[m (i = [31m0[m; i < [31m4[m; i++) {[41;96H[K[41;96H46,1[10C46%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hpercentage = (counts[i] / ([32mfloat[m)num_values) * [31m100[m;[41;96H[K[41;96H47,1[10C53%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;9Hprintf([31m"Value [m[35m%d[m[31m: [m[35m%.1f%%\n[m[31m"[m, i, percentage);[41;96H[K[41;96H48,1[10C61%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H}[41;96H[K[41;96H49,1[10C69%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[41;96H[K[41;96H50,0-1[8C76%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[40;5H[38;5;130mreturn[m [31m0[m;[41;96H[K[41;96H51,1[10C84%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[3;12H[106m{[40;1H}[m[41;96H[K[41;96H52,1[10C92%[40;1H[?12l[?25h[?25l[1;40r[40;1H
[1;41r[2;12H{[39;1H}[41;96H[K[41;96H53,0-1[8CBot[40;1H[?12l[?25h[?25l[41;96H[K[41;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"lab5_part2.c" 53L, 1408C written
[?1l>[?12l[?25h[?1049l]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ cat lab5_part2.c
/*
  random numbers from 0 to 3 counter
  Linn Klofta  

 */

#include <stdio.h>
#include <stdlib.h>

// Generate random value between 0 and 3
int generate_random_value() {
    return rand() % 4; // Generates a value from 0 to 3
}

int main() {
    int seed;
    int num_values;
    int counts[4] = {0}; // array to hold counts for 0, 1, 2, and 3
    int i;               // loop variables
    int value;           // variable for generated values
    float percentage;    // Variable for % calculation

    // Prompt for a seed value
    printf("Enter a seed value: ");
    scanf("%d", &seed);
    srand(seed); // set seed value for random number generation

    // prompt for number of random values to generate
    printf("Enter the number of random values to generate: ");
    scanf("%d", &num_values);

    // Generate random values and count occurrences
    for (i = 0; i < num_values; i++) {
        value = generate_random_value();
        counts[value]++; // Increment the count for the generated value
    }

    // Display the counts
    printf("Counts:\n");
    for (i = 0; i < 4; i++) {
        printf("Value %d: %d\n", i, counts[i]);
    }
 
    // Calculate and display pecentages of each number
    printf("Percentages:\n");
    for (i = 0; i < 4; i++) {
        percentage = (counts[i] / (float)num_values) * 100;
        printf("Value %d: %.1f%%\n", i, percentage);
    }

    return 0;
}

]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ gcc lab5_part2.c -o lab5_part2
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ ./lab5_part2
Enter a seed value: 45
Enter the number of random values to generate: 10
Counts:
Value 0: 1
Value 1: 1
Value 2: 1
Value 3: 7
Percentages:
Value 0: 10.0%
Value 1: 10.0%
Value 2: 10.0%
Value 3: 70.0%
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ ./lab5_part2
Enter a seed value: 10
Enter the number of random values to generate: 20
Counts:
Value 0: 5
Value 1: 5
Value 2: 3
Value 3: 7
Percentages:
Value 0: 25.0%
Value 1: 25.0%
Value 2: 15.0%
Value 3: 35.0%
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ ./lab5_part2
Enter a seed value: 100
Enter the number of random values to generate: 100
Counts:
Value 0: 27
Value 1: 24
Value 2: 24
Value 3: 25
Percentages:
Value 0: 27.0%
Value 1: 24.0%
Value 2: 24.0%
Value 3: 25.0%
]0;lklfta1@gsuad.gsu.edu@snowball:~/labs/lab5[lklfta1@gsuad.gsu.edu@snowball lab5]$ exit
exit

Script done on Sun 29 Sep 2024 10:04:58 AM EDT
